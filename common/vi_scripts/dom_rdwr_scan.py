#!/usr/bin/env python2
import os, sys
import xml.dom.minidom
import random
import subprocess
import string
import re
from pprint import pprint
debug=False
src2param={}
decpaths=[]
decpath2src={}
   

src2param = {
 u'../../../../bali_dal/prototype/pcie/rtl/bali_pcie_app/regs/bali_dplbuf_regs.xml': {u'DplBufFreePfn': {u'DplBufFreePfn': {'descr': u'Buffer size \\- pages written. Fifo full has 2 states: DlBufFreePfn=0xFFFFFFFF and DplBufFreePfn=0. Fifo empty is DplBufFreePfn=Buffer size \\- 1.',
                                                                                                                            'loc': u'[31:0]'},
                                                                                                         'default': u"64'h0",
                                                                                                         'offset': u"10'h9",
                                                                                                         'typ': u'RO'},
                                                                                      u'DplBufLastPfn': {u'DplBufLastPfn': {'descr': u'Buffer last page number. (Each page is 4KB)',
                                                                                                                            'loc': u'[31:0]'},
                                                                                                         'default': u"64'd0",
                                                                                                         'offset': u"10'h6",
                                                                                                         'typ': u'RW'},
                                                                                      u'DplBufPtrRst': {u'DplBufPtrRst': {'descr': u'Resets DplBufWrPtr to DplBufStartPfn',
                                                                                                                          'loc': u'[0:0]',
                                                                                                                          'typ': u'SC'},
                                                                                                        'default': u"64'h0",
                                                                                                        'offset': u"10'hA",
                                                                                                        'typ': u'RW'},
                                                                                      u'DplBufRdPtr': {u'DplBufRdPtr': {'descr': u'Last page read by DPL. (Each page is 4KB). Initialize to DplBufLastPfn.',
                                                                                                                        'loc': u'[31:0]'},
                                                                                                       'default': u"64'd0",
                                                                                                       'offset': u"10'h7",
                                                                                                       'typ': u'RW'},
                                                                                      u'DplBufStartPfn': {u'DplBufStartPfn': {'descr': u'Buffer start page number',
                                                                                                                              'loc': u'[31:0]'},
                                                                                                          'default': u"64'h0",
                                                                                                          'offset': u"10'h5",
                                                                                                          'typ': u'RW'},
                                                                                      u'DplBufWrPtr': {u'DplBufWrPtr': {'descr': u'Next page to be written by FPGA (Each page is 4KB)',
                                                                                                                        'loc': u'[31:0]'},
                                                                                                       'default': u"64'h0",
                                                                                                       'offset': u"10'h8",
                                                                                                       'typ': u'RO'},
                                                                                      u'_scratch': {u'_scratch': {'loc': u'[63:0]'},
                                                                                                    'default': u"64'h0",
                                                                                                    'offset': u"10'h0",
                                                                                                    'typ': u'RW'}},
 u'../../../../bali_dal/prototype/pcie/rtl/bali_pcie_app/regs/bali_pcie_regs.xml': {u'FlushStatus': {u'Done': {'descr': u'1=Link data path is completely flushed. There is no stale packets in any of the FIFOs.',
                                                                                                               'loc': u'[11:0]'},
                                                                                                     'default': u"64'd0",
                                                                                                     'descr': u'Before a link is reset, the corresponding bit in this register must be checked to ensure the data path is completely flushed. Bit 0 is for link 0 status, bit 1 is for link 1 status, etc.',
                                                                                                     'offset': u"10'h020",
                                                                                                     'typ': u'RO'},
                                                                                    u'MaxPyld': {'default': u"64'd0",
                                                                                                 'descr': u'Maximum TLP payload size register. Must be set to maximum supported size supported by motherboard.',
                                                                                                 'offset': u"10'h010",
                                                                                                 u'size': {'descr': u'000: 128 bytes. 001: 256 bytes. 010: 512 bytes. 011: 1024 bytes. 100: 2048 bytes. 101-111: reserved.',
                                                                                                           'loc': u'[2:0]'},
                                                                                                 'typ': u'RW'},
                                                                                    u'PcieAppCtl': {u'RstPcieRegs': {'loc': u'[0:0]',
                                                                                                                     'typ': u'SC'},
                                                                                                    'default': u"64'd0",
                                                                                                    'offset': u"10'h001",
                                                                                                    'typ': u'RW'},
                                                                                    u'PcieRdTimeoutCtr': {u'PcieRdTimeoutCtr': {'loc': u'[15:0]'},
                                                                                                          'default': u"64'd0",
                                                                                                          'descr': u'If a PCIe MRd TLP is issued to the FPGA fabric and there is no response after the timeout period then this counter is incremented.',
                                                                                                          'offset': u"10'h012",
                                                                                                          'typ': u'FRC'},
                                                                                    u'PcieStatus': {u'CurrentLanes': {'descr': u'This signal indicates the number of lanes that configured during link training. The following encodings are defined: 0001\\=1 lane,0010\\=2 lanes,0100\\=4 lanes,1000\\=8 lanes',
                                                                                                                      'loc': u'[11:8]'},
                                                                                                    u'CurrentSpeed': {'descr': u'11\\=Gen3,10\\=Gen2,01\\=Gen1,00\\=Undefined',
                                                                                                                      'loc': u'[5:4]'},
                                                                                                    'default': u"64'd0",
                                                                                                    u'fixedclk_locked': {'descr': u'Indicates 50MHz iRECONFIG_XCVR_CLK for transceiver initialization is locked. Application should be held in reset until this is asserted.',
                                                                                                                         'loc': u'[1:1]'},
                                                                                                    'offset': u"10'h002",
                                                                                                    u'serdes_pll_locked': {'descr': u'Indicates coreclkout_hip is locked.',
                                                                                                                           'loc': u'[0:0]'},
                                                                                                    'typ': u'RO'},
                                                                                    u'PcieTimeoutPeriod': {u'PcieTimeoutPeriod': {'loc': u'[19:0]'},
                                                                                                           'default': u"20'd10000",
                                                                                                           'descr': u'Sets the timeout period for how long the FPGA should wait before sending a CplD in response to an unanswered MRd. The timebase is in ticks of 100MHz.  100us = 0d10000 ticks = 0x2710 ticks.  This timeout is also used for unacknoledged MWr.',
                                                                                                           'offset': u"10'h011",
                                                                                                           'typ': u'RW'},
                                                                                    u'PcieWrTimeoutCtr': {u'PcieWrTimeoutCtr': {'loc': u'[15:0]'},
                                                                                                          'default': u"64'd0",
                                                                                                          'descr': u'If a PCIe MWr TLP is issued to the FPGA fabric and there is no response after the timeout period then this counter is incremented.',
                                                                                                          'offset': u"10'h013",
                                                                                                          'typ': u'FRC'},
                                                                                    u'_scratch': {u'_scratch': {'loc': u'[63:0]',
                                                                                                                'typ': u'RW'},
                                                                                                  'default': u"64'd0",
                                                                                                  'offset': u"10'h000",
                                                                                                  'typ': u'RW'},
                                                                                    u'dlup_exit_ctr': {'default': u"64'd0",
                                                                                                       u'dlup_exit_ctr': {'descr': u'Increments when the HIP core exits the DLCMSM DLUP state. Causes app reset.',
                                                                                                                          'loc': u'[15:0]'},
                                                                                                       'offset': u"10'h004",
                                                                                                       'typ': u'FRC'},
                                                                                    u'ecc_derr_cor_ext_rcv': {'default': u"64'd0",
                                                                                                              u'ecc_derr_cor_ext_rcv': {'descr': u'Indicates a corrected error in the RX buffer. This signal is for debug only. It is not valid until the RX buffer is filled with data.',
                                                                                                                                        'loc': u'[15:0]'},
                                                                                                              'offset': u"10'h006",
                                                                                                              'typ': u'FRC'},
                                                                                    u'ecc_derr_cor_ext_rpl': {'default': u"64'd0",
                                                                                                              u'ecc_derr_cor_ext_rpl': {'descr': u'Indicates a corrected ECC error in the retry buffer.',
                                                                                                                                        'loc': u'[15:0]'},
                                                                                                              'offset': u"10'h008",
                                                                                                              'typ': u'FRC'},
                                                                                    u'ecc_derr_rpl': {'default': u"64'd0",
                                                                                                      u'ecc_derr_rpl': {'descr': u'Indicates an uncorrectable error in retry buffer.',
                                                                                                                        'loc': u'[15:0]'},
                                                                                                      'offset': u"10'h007",
                                                                                                      'typ': u'FRC'},
                                                                                    u'l2_exit_ctr': {'default': u"64'd0",
                                                                                                     u'l2_exit_ctr': {'descr': u'Increments when the LTSSM transitions from l2.idle to detect.',
                                                                                                                      'loc': u'[15:0]'},
                                                                                                     'offset': u"10'h005",
                                                                                                     'typ': u'FRC'},
                                                                                    u'poison_tlp_received_cnt': {'default': u"64'd0",
                                                                                                                 'offset': u"10'h00b",
                                                                                                                 u'poison_tlp_received_cnt': {'descr': u'app received TLP with poison bit set. (uncorrectable-non-fatal).',
                                                                                                                                              'loc': u'[15:0]'},
                                                                                                                 'typ': u'FRC'},
                                                                                    u'serdes_pll_locked_ctr': {'default': u"64'd0",
                                                                                                               'offset': u"10'h003",
                                                                                                               u'serdes_pll_locked_ctr': {'loc': u'[15:0]'},
                                                                                                               'typ': u'FRC'},
                                                                                    u'ur_np_tlp_received_cnt': {'default': u"64'd0",
                                                                                                                'offset': u"10'h00c",
                                                                                                                'typ': u'FRC',
                                                                                                                u'ur_np_tlp_received_cnt': {'descr': u'app received TLP with non-posted unsupported request (uncorrectable-non-fatal).',
                                                                                                                                            'loc': u'[15:0]'}},
                                                                                    u'ur_tlp_received_cnt': {'default': u"64'd0",
                                                                                                             'offset': u"10'h00d",
                                                                                                             'typ': u'FRC',
                                                                                                             u'ur_tlp_received_cnt': {'descr': u'app received TLP with unsupported request (uncorrectable-non-fatal).',
                                                                                                                                      'loc': u'[15:0]'}}},
 u'../../../../bali_dal/prototype/pcie/rtl/bali_pcie_app/regs/pcie_perf_regs.xml': {u'Ctrl': {u'LatchCtrs': {'descr': u'On assertion latches and resets counters underneath. (auto-clears)',
                                                                                                             'loc': u'[0:0]',
                                                                                                             'typ': u'SC'},
                                                                                              'default': u"64'd0",
                                                                                              'offset': u"10'h001",
                                                                                              'typ': u'RW'},
                                                                                    u'LINK0_COMPLETE_TICKS': {u'LINK0_COMPLETE_TICKS': {'descr': u'Number of 4KB transfers since last latch',
                                                                                                                                        'loc': u'[31:0]'},
                                                                                                              'default': u"64'd0",
                                                                                                              'offset': u"10'h040",
                                                                                                              'typ': u'LRC'},
                                                                                    u'LINK0_REQ_TICKS': {u'LINK0_REQ_TICKS': {'descr': u'Total number of ticks that this link asserts request and grant not issued.',
                                                                                                                              'loc': u'[31:0]'},
                                                                                                         'default': u"64'd0",
                                                                                                         'offset': u"10'h010",
                                                                                                         'typ': u'LRC',
                                                                                                         'usr': u'1'},
                                                                                    u'LINK0_REQ_TICKS_MAX': {u'LINK0_REQ_TICKS_MAX': {'descr': u'Max number of ticks this link asserted request before being serviced since last latch',
                                                                                                                                      'loc': u'[31:0]'},
                                                                                                             'default': u"64'd0",
                                                                                                             'offset': u"10'h020",
                                                                                                             'typ': u'RO'},
                                                                                    u'LINK0_VALID_TICKS': {u'LINK0_VALID_TICKS': {'descr': u'Number of ticks that VALID is asserted since last latch',
                                                                                                                                  'loc': u'[31:0]'},
                                                                                                           'default': u"64'd0",
                                                                                                           'offset': u"10'h030",
                                                                                                           'typ': u'LRC'},
                                                                                    u'LINK10_COMPLETE_TICKS': {u'LINK10_COMPLETE_TICKS': {'loc': u'[31:0]'},
                                                                                                               'default': u"64'd0",
                                                                                                               'offset': u"10'h04A",
                                                                                                               'typ': u'LRC'},
                                                                                    u'LINK10_REQ_TICKS': {u'LINK10_REQ_TICKS': {'loc': u'[31:0]'},
                                                                                                          'default': u"64'd0",
                                                                                                          'offset': u"10'h01A",
                                                                                                          'typ': u'LRC',
                                                                                                          'usr': u'1'},
                                                                                    u'LINK10_REQ_TICKS_MAX': {u'LINK10_REQ_TICKS_MAX': {'loc': u'[31:0]'},
                                                                                                              'default': u"64'd0",
                                                                                                              'offset': u"10'h02A",
                                                                                                              'typ': u'RO'},
                                                                                    u'LINK10_VALID_TICKS': {u'LINK10_VALID_TICKS': {'loc': u'[31:0]'},
                                                                                                            'default': u"64'd0",
                                                                                                            'offset': u"10'h03A",
                                                                                                            'typ': u'LRC'},
                                                                                    u'LINK11_COMPLETE_TICKS': {u'LINK11_COMPLETE_TICKS': {'loc': u'[31:0]'},
                                                                                                               'default': u"64'd0",
                                                                                                               'offset': u"10'h04B",
                                                                                                               'typ': u'LRC'},
                                                                                    u'LINK11_REQ_TICKS': {u'LINK11_REQ_TICKS': {'loc': u'[31:0]'},
                                                                                                          'default': u"64'd0",
                                                                                                          'offset': u"10'h01B",
                                                                                                          'typ': u'LRC',
                                                                                                          'usr': u'1'},
                                                                                    u'LINK11_REQ_TICKS_MAX': {u'LINK11_REQ_TICKS_MAX': {'loc': u'[31:0]'},
                                                                                                              'default': u"64'd0",
                                                                                                              'offset': u"10'h02B",
                                                                                                              'typ': u'RO'},
                                                                                    u'LINK11_VALID_TICKS': {u'LINK11_VALID_TICKS': {'loc': u'[31:0]'},
                                                                                                            'default': u"64'd0",
                                                                                                            'offset': u"10'h03B",
                                                                                                            'typ': u'LRC'},
                                                                                    u'LINK1_COMPLETE_TICKS': {u'LINK1_COMPLETE_TICKS': {'loc': u'[31:0]'},
                                                                                                              'default': u"64'd0",
                                                                                                              'offset': u"10'h041",
                                                                                                              'typ': u'LRC'},
                                                                                    u'LINK1_REQ_TICKS': {u'LINK1_REQ_TICKS': {'loc': u'[31:0]'},
                                                                                                         'default': u"64'd0",
                                                                                                         'offset': u"10'h011",
                                                                                                         'typ': u'LRC',
                                                                                                         'usr': u'1'},
                                                                                    u'LINK1_REQ_TICKS_MAX': {u'LINK1_REQ_TICKS_MAX': {'loc': u'[31:0]'},
                                                                                                             'default': u"64'd0",
                                                                                                             'offset': u"10'h021",
                                                                                                             'typ': u'RO'},
                                                                                    u'LINK1_VALID_TICKS': {u'LINK1_VALID_TICKS': {'loc': u'[31:0]'},
                                                                                                           'default': u"64'd0",
                                                                                                           'offset': u"10'h031",
                                                                                                           'typ': u'LRC'},
                                                                                    u'LINK2_COMPLETE_TICKS': {u'LINK2_COMPLETE_TICKS': {'loc': u'[31:0]'},
                                                                                                              'default': u"64'd0",
                                                                                                              'offset': u"10'h042",
                                                                                                              'typ': u'LRC'},
                                                                                    u'LINK2_REQ_TICKS': {u'LINK2_REQ_TICKS': {'loc': u'[31:0]'},
                                                                                                         'default': u"64'd0",
                                                                                                         'offset': u"10'h012",
                                                                                                         'typ': u'LRC',
                                                                                                         'usr': u'1'},
                                                                                    u'LINK2_REQ_TICKS_MAX': {u'LINK2_REQ_TICKS_MAX': {'loc': u'[31:0]'},
                                                                                                             'default': u"64'd0",
                                                                                                             'offset': u"10'h022",
                                                                                                             'typ': u'RO'},
                                                                                    u'LINK2_VALID_TICKS': {u'LINK2_VALID_TICKS': {'loc': u'[31:0]'},
                                                                                                           'default': u"64'd0",
                                                                                                           'offset': u"10'h032",
                                                                                                           'typ': u'LRC'},
                                                                                    u'LINK3_COMPLETE_TICKS': {u'LINK3_COMPLETE_TICKS': {'loc': u'[31:0]'},
                                                                                                              'default': u"64'd0",
                                                                                                              'offset': u"10'h043",
                                                                                                              'typ': u'LRC'},
                                                                                    u'LINK3_REQ_TICKS': {u'LINK3_REQ_TICKS': {'loc': u'[31:0]'},
                                                                                                         'default': u"64'd0",
                                                                                                         'offset': u"10'h013",
                                                                                                         'typ': u'LRC',
                                                                                                         'usr': u'1'},
                                                                                    u'LINK3_REQ_TICKS_MAX': {u'LINK3_REQ_TICKS_MAX': {'loc': u'[31:0]'},
                                                                                                             'default': u"64'd0",
                                                                                                             'offset': u"10'h023",
                                                                                                             'typ': u'RO'},
                                                                                    u'LINK3_VALID_TICKS': {u'LINK3_VALID_TICKS': {'loc': u'[31:0]'},
                                                                                                           'default': u"64'd0",
                                                                                                           'offset': u"10'h033",
                                                                                                           'typ': u'LRC'},
                                                                                    u'LINK4_COMPLETE_TICKS': {u'LINK4_COMPLETE_TICKS': {'loc': u'[31:0]'},
                                                                                                              'default': u"64'd0",
                                                                                                              'offset': u"10'h044",
                                                                                                              'typ': u'LRC'},
                                                                                    u'LINK4_REQ_TICKS': {u'LINK4_REQ_TICKS': {'loc': u'[31:0]'},
                                                                                                         'default': u"64'd0",
                                                                                                         'offset': u"10'h014",
                                                                                                         'typ': u'LRC',
                                                                                                         'usr': u'1'},
                                                                                    u'LINK4_REQ_TICKS_MAX': {u'LINK4_REQ_TICKS_MAX': {'loc': u'[31:0]'},
                                                                                                             'default': u"64'd0",
                                                                                                             'offset': u"10'h024",
                                                                                                             'typ': u'RO'},
                                                                                    u'LINK4_VALID_TICKS': {u'LINK4_VALID_TICKS': {'loc': u'[31:0]'},
                                                                                                           'default': u"64'd0",
                                                                                                           'offset': u"10'h034",
                                                                                                           'typ': u'LRC'},
                                                                                    u'LINK5_COMPLETE_TICKS': {u'LINK5_COMPLETE_TICKS': {'loc': u'[31:0]'},
                                                                                                              'default': u"64'd0",
                                                                                                              'offset': u"10'h045",
                                                                                                              'typ': u'LRC'},
                                                                                    u'LINK5_REQ_TICKS': {u'LINK5_REQ_TICKS': {'loc': u'[31:0]'},
                                                                                                         'default': u"64'd0",
                                                                                                         'offset': u"10'h015",
                                                                                                         'typ': u'LRC',
                                                                                                         'usr': u'1'},
                                                                                    u'LINK5_REQ_TICKS_MAX': {u'LINK5_REQ_TICKS_MAX': {'loc': u'[31:0]'},
                                                                                                             'default': u"64'd0",
                                                                                                             'offset': u"10'h025",
                                                                                                             'typ': u'RO'},
                                                                                    u'LINK5_VALID_TICKS': {u'LINK5_VALID_TICKS': {'loc': u'[31:0]'},
                                                                                                           'default': u"64'd0",
                                                                                                           'offset': u"10'h035",
                                                                                                           'typ': u'LRC'},
                                                                                    u'LINK6_COMPLETE_TICKS': {u'LINK6_COMPLETE_TICKS': {'loc': u'[31:0]'},
                                                                                                              'default': u"64'd0",
                                                                                                              'offset': u"10'h046",
                                                                                                              'typ': u'LRC'},
                                                                                    u'LINK6_REQ_TICKS': {u'LINK6_REQ_TICKS': {'loc': u'[31:0]'},
                                                                                                         'default': u"64'd0",
                                                                                                         'offset': u"10'h016",
                                                                                                         'typ': u'LRC',
                                                                                                         'usr': u'1'},
                                                                                    u'LINK6_REQ_TICKS_MAX': {u'LINK6_REQ_TICKS_MAX': {'loc': u'[31:0]'},
                                                                                                             'default': u"64'd0",
                                                                                                             'offset': u"10'h026",
                                                                                                             'typ': u'RO'},
                                                                                    u'LINK6_VALID_TICKS': {u'LINK6_VALID_TICKS': {'loc': u'[31:0]'},
                                                                                                           'default': u"64'd0",
                                                                                                           'offset': u"10'h036",
                                                                                                           'typ': u'LRC'},
                                                                                    u'LINK7_COMPLETE_TICKS': {u'LINK7_COMPLETE_TICKS': {'loc': u'[31:0]'},
                                                                                                              'default': u"64'd0",
                                                                                                              'offset': u"10'h025",
                                                                                                              'typ': u'LRC'},
                                                                                    u'LINK7_REQ_TICKS': {u'LINK7_REQ_TICKS': {'loc': u'[31:0]'},
                                                                                                         'default': u"64'd0",
                                                                                                         'offset': u"10'h017",
                                                                                                         'typ': u'LRC',
                                                                                                         'usr': u'1'},
                                                                                    u'LINK7_REQ_TICKS_MAX': {u'LINK7_REQ_TICKS_MAX': {'loc': u'[31:0]'},
                                                                                                             'default': u"64'd0",
                                                                                                             'offset': u"10'h027",
                                                                                                             'typ': u'RO'},
                                                                                    u'LINK7_VALID_TICKS': {u'LINK7_VALID_TICKS': {'loc': u'[31:0]'},
                                                                                                           'default': u"64'd0",
                                                                                                           'offset': u"10'h037",
                                                                                                           'typ': u'LRC'},
                                                                                    u'LINK8_COMPLETE_TICKS': {u'LINK8_COMPLETE_TICKS': {'loc': u'[31:0]'},
                                                                                                              'default': u"64'd0",
                                                                                                              'offset': u"10'h048",
                                                                                                              'typ': u'LRC'},
                                                                                    u'LINK8_REQ_TICKS': {u'LINK8_REQ_TICKS': {'loc': u'[31:0]'},
                                                                                                         'default': u"64'd0",
                                                                                                         'offset': u"10'h018",
                                                                                                         'typ': u'LRC',
                                                                                                         'usr': u'1'},
                                                                                    u'LINK8_REQ_TICKS_MAX': {u'LINK8_REQ_TICKS_MAX': {'loc': u'[31:0]'},
                                                                                                             'default': u"64'd0",
                                                                                                             'offset': u"10'h028",
                                                                                                             'typ': u'RO'},
                                                                                    u'LINK8_VALID_TICKS': {u'LINK8_VALID_TICKS': {'loc': u'[31:0]'},
                                                                                                           'default': u"64'd0",
                                                                                                           'offset': u"10'h038",
                                                                                                           'typ': u'LRC'},
                                                                                    u'LINK9_COMPLETE_TICKS': {u'LINK9_COMPLETE_TICKS': {'loc': u'[31:0]'},
                                                                                                              'default': u"64'd0",
                                                                                                              'offset': u"10'h049",
                                                                                                              'typ': u'LRC'},
                                                                                    u'LINK9_REQ_TICKS': {u'LINK9_REQ_TICKS': {'loc': u'[31:0]'},
                                                                                                         'default': u"64'd0",
                                                                                                         'offset': u"10'h019",
                                                                                                         'typ': u'LRC',
                                                                                                         'usr': u'1'},
                                                                                    u'LINK9_REQ_TICKS_MAX': {u'LINK9_REQ_TICKS_MAX': {'loc': u'[31:0]'},
                                                                                                             'default': u"64'd0",
                                                                                                             'offset': u"10'h029",
                                                                                                             'typ': u'RO'},
                                                                                    u'LINK9_VALID_TICKS': {u'LINK9_VALID_TICKS': {'loc': u'[31:0]'},
                                                                                                           'default': u"64'd0",
                                                                                                           'offset': u"10'h039",
                                                                                                           'typ': u'LRC'},
                                                                                    u'TICKS_SINCE_LAST_LATCH': {u'TICKS_SINCE_LAST_LATCH': {'descr': u'Gen2=125MHz or 8ns per tick',
                                                                                                                                            'loc': u'[63:0]'},
                                                                                                                'default': u"64'd0",
                                                                                                                'offset': u"10'h002",
                                                                                                                'typ': u'LRC'},
                                                                                    u'TX_ST_16BYTE_CTR': {u'TX_ST_BYTE_CTR': {'descr': u'Count number of 16bytes transferred into HIP (st_empty=2).\n\t\t Last segment of DAL MWr transaction.',
                                                                                                                              'loc': u'[63:0]'},
                                                                                                          'default': u"64'd0",
                                                                                                          'offset': u"10'h052",
                                                                                                          'typ': u'LRC'},
                                                                                    u'TX_ST_24BYTE_CTR': {u'TX_ST_BYTE_CTR': {'descr': u'Count number of 24bytes transferred into HIP (st_empty=1).\n\t\t All completions belongs to this entry.',
                                                                                                                              'loc': u'[63:0]'},
                                                                                                          'default': u"64'd0",
                                                                                                          'offset': u"10'h051",
                                                                                                          'typ': u'LRC'},
                                                                                    u'TX_ST_32BYTE_CTR': {u'TX_ST_BYTE_CTR': {'descr': u'Count number of 32bytes transferred into HIP (st_empty=0).\n\t\t DAL MWr header and payload except last segment.',
                                                                                                                              'loc': u'[63:0]'},
                                                                                                          'default': u"64'd0",
                                                                                                          'offset': u"10'h050",
                                                                                                          'typ': u'LRC'},
                                                                                    u'TX_ST_READY_N_CTR': {u'TX_ST_READY_N_CTR': {'descr': u'Count number of ticks that HIP de-asserts ready.',
                                                                                                                                  'loc': u'[31:0]'},
                                                                                                           'default': u"64'd0",
                                                                                                           'offset': u"10'h005",
                                                                                                           'typ': u'LRC'},
                                                                                    u'TX_ST_SOP_CTR': {u'TX_ST_SOP_CTR': {'descr': u"Number of TLP's transferred into HIP.",
                                                                                                                          'loc': u'[63:0]'},
                                                                                                       'default': u"64'd0",
                                                                                                       'offset': u"10'h003",
                                                                                                       'typ': u'LRC'},
                                                                                    u'_scratch': {u'_scratch': {'loc': u'[63:0]',
                                                                                                                'typ': u'RW'},
                                                                                                  'default': u"64'd0",
                                                                                                  'offset': u"10'h000",
                                                                                                  'typ': u'RW'}},
 u'../../../../bali_dal/prototype/pcie/rtl/pcie_mwr_bist/pcie_mwr_bist_regs.xml': {u'ctrl': {'default': u"64'h0",
                                                                                             u'iterations': {'descr': u'0=run forever, non-zero means run for that many iterations',
                                                                                                             'loc': u'[63:32]'},
                                                                                             u'link_en': {'descr': u'1=link is enabled to generate. Atleast one link must be enabled.',
                                                                                                          'loc': u'[27:16]'},
                                                                                             'offset': u"10'h1",
                                                                                             u'pat_type': {'descr': u'0=incrementing, 1=prbs7',
                                                                                                           'loc': u'[15:4]'},
                                                                                             u'run': {'descr': u'0-to-1 transition starts the test',
                                                                                                      'loc': u'[0:0]'},
                                                                                             'typ': u'RW'},
                                                                                   u'status0': {'default': u"64'h0",
                                                                                                u'iterations': {'descr': u'number of iterations completed on link 0',
                                                                                                                'loc': u'[63:32]'},
                                                                                                'offset': u"10'h2",
                                                                                                u'run_dyn': {'loc': u'[0:0]'},
                                                                                                'typ': u'RO'},
                                                                                   u'status1': {'default': u"64'h0",
                                                                                                u'iterations': {'descr': u'number of iterations completed on link 1',
                                                                                                                'loc': u'[63:32]'},
                                                                                                'offset': u"10'h3",
                                                                                                u'run_dyn': {'loc': u'[0:0]'},
                                                                                                'typ': u'RO'},
                                                                                   u'status10': {'default': u"64'h0",
                                                                                                 u'iterations': {'descr': u'number of iterations completed on link 10',
                                                                                                                 'loc': u'[63:32]'},
                                                                                                 'offset': u"10'hc",
                                                                                                 u'run_dyn': {'loc': u'[0:0]'},
                                                                                                 'typ': u'RO'},
                                                                                   u'status11': {'default': u"64'h0",
                                                                                                 u'iterations': {'descr': u'number of iterations completed on link 11',
                                                                                                                 'loc': u'[63:32]'},
                                                                                                 'offset': u"10'hd",
                                                                                                 u'run_dyn': {'loc': u'[0:0]'},
                                                                                                 'typ': u'RO'},
                                                                                   u'status2': {'default': u"64'h0",
                                                                                                u'iterations': {'descr': u'number of iterations completed on link 2',
                                                                                                                'loc': u'[63:32]'},
                                                                                                'offset': u"10'h4",
                                                                                                u'run_dyn': {'loc': u'[0:0]'},
                                                                                                'typ': u'RO'},
                                                                                   u'status3': {'default': u"64'h0",
                                                                                                u'iterations': {'descr': u'number of iterations completed on link 3',
                                                                                                                'loc': u'[63:32]'},
                                                                                                'offset': u"10'h5",
                                                                                                u'run_dyn': {'loc': u'[0:0]'},
                                                                                                'typ': u'RO'},
                                                                                   u'status4': {'default': u"64'h0",
                                                                                                u'iterations': {'descr': u'number of iterations completed on link 4',
                                                                                                                'loc': u'[63:32]'},
                                                                                                'offset': u"10'h6",
                                                                                                u'run_dyn': {'loc': u'[0:0]'},
                                                                                                'typ': u'RO'},
                                                                                   u'status5': {'default': u"64'h0",
                                                                                                u'iterations': {'descr': u'number of iterations completed on link 5',
                                                                                                                'loc': u'[63:32]'},
                                                                                                'offset': u"10'h7",
                                                                                                u'run_dyn': {'loc': u'[0:0]'},
                                                                                                'typ': u'RO'},
                                                                                   u'status6': {'default': u"64'h0",
                                                                                                u'iterations': {'descr': u'number of iterations completed on link 6',
                                                                                                                'loc': u'[63:32]'},
                                                                                                'offset': u"10'h8",
                                                                                                u'run_dyn': {'loc': u'[0:0]'},
                                                                                                'typ': u'RO'},
                                                                                   u'status7': {'default': u"64'h0",
                                                                                                u'iterations': {'descr': u'number of iterations completed on link 7',
                                                                                                                'loc': u'[63:32]'},
                                                                                                'offset': u"10'h9",
                                                                                                u'run_dyn': {'loc': u'[0:0]'},
                                                                                                'typ': u'RO'},
                                                                                   u'status8': {'default': u"64'h0",
                                                                                                u'iterations': {'descr': u'number of iterations completed on link 8',
                                                                                                                'loc': u'[63:32]'},
                                                                                                'offset': u"10'ha",
                                                                                                u'run_dyn': {'loc': u'[0:0]'},
                                                                                                'typ': u'RO'},
                                                                                   u'status9': {'default': u"64'h0",
                                                                                                u'iterations': {'descr': u'number of iterations completed on link 9',
                                                                                                                'loc': u'[63:32]'},
                                                                                                'offset': u"10'hb",
                                                                                                u'run_dyn': {'loc': u'[0:0]'},
                                                                                                'typ': u'RO'},
                                                                                   u'test_reg': {'default': u"64'h0",
                                                                                                 'offset': u"10'h0",
                                                                                                 u'test_reg': {'loc': u'[63:0]'},
                                                                                                 'typ': u'RW'}},
 u'../../../../common/vi_design/chipregs/doc/chipregs.xml': {u'ExtIODebug': {'default': u"64'h0",
                                                                             'descr': u'Current value of FPGA I/O pins - used for debug',
                                                                             u'iASY': {'loc': u'[34:31]'},
                                                                             u'iBD_NO': {'loc': u'[55:54]'},
                                                                             u'iBUS_CLK': {'loc': u'[2:2]'},
                                                                             u'iBUS_EN': {'loc': u'[3:3]'},
                                                                             u'iBUS_MASTER': {'loc': u'[4:4]'},
                                                                             u'iFPGA_CLRN': {'loc': u'[1:1]'},
                                                                             u'iFPGA_ID_N': {'loc': u'[35:35]'},
                                                                             u'iFPGA_RSTN': {'loc': u'[0:0]'},
                                                                             u'iRXD': {'loc': u'[52:52]'},
                                                                             u'ioBUS_SPARE': {'loc': u'[6:5]'},
                                                                             u'ioEXT1': {'loc': u'[15:15]'},
                                                                             u'ioEXT2': {'loc': u'[16:16]'},
                                                                             u'ioEXT3': {'loc': u'[17:17]'},
                                                                             u'ioEXT4': {'loc': u'[18:18]'},
                                                                             u'ioFPGA_DATA': {'loc': u'[14:7]'},
                                                                             u'ioOPT_1': {'loc': u'[56:56]'},
                                                                             u'ioOPT_2': {'loc': u'[57:57]'},
                                                                             u'ioOPT_3': {'loc': u'[58:58]'},
                                                                             u'ioOPT_4': {'loc': u'[59:59]'},
                                                                             u'ioOPT_5': {'loc': u'[60:60]'},
                                                                             u'ioOPT_6': {'loc': u'[61:61]'},
                                                                             u'ioOPT_ROT_1': {'loc': u'[62:62]'},
                                                                             u'ioOPT_ROT_2': {'loc': u'[63:63]'},
                                                                             u'oFC_RATE_SEL': {'loc': u'[30:19]'},
                                                                             u'oLED_N': {'loc': u'[51:36]'},
                                                                             u'oTXD': {'loc': u'[53:53]'},
                                                                             'offset': u"10'h13",
                                                                             'typ': u'RO'},
                                                             u'FPGA_Ctl': {u'LED_Output_Disable': {'descr': u'Disables drive of the output LEDs.  LEDs outputs are forced high when disabled.  Can be used to reduce power and lower EMI emissions.',
                                                                                                   'loc': u'[3:3]'},
                                                                           u'Logic_Analyzer_Inf_Disable': {'descr': u'Disables drive of the logic analyzer output pins.  Logic analyzer interface is held low when disabled.  Can be used to reduce power and lower EMI emissions.',
                                                                                                           'loc': u'[2:2]'},
                                                                           u'PCIE_Autoreset_Disable': {'descr': u'Disables HW based mechanism which monitors for PCIE LTSSM lockups and initiates a reset.  Default is disabled.',
                                                                                                       'loc': u'[4:4]'},
                                                                           u'Rx_Serdes_Disable': {'descr': u'Forces SERDES receive into reset - disabling receive functionality.  Can be used to reduce power and lower EMI emissions.',
                                                                                                  'loc': u'[1:1]'},
                                                                           u'Tx_Serdes_Disable': {'descr': u'Forces SERDES transmit into reset - disabling transmit functionality.  Can be used to reduce power and lower EMI emissions.',
                                                                                                  'loc': u'[0:0]'},
                                                                           'default': u"64'h10",
                                                                           'offset': u"10'h17",
                                                                           'typ': u'RW'},
                                                             u'FpgaCap': {u'BistPcie0': {'loc': u'[49:49]'},
                                                                          u'BistPcie1': {'loc': u'[50:50]'},
                                                                          u'BistPrbsXcvr': {'loc': u'[51:51]'},
                                                                          u'BistTx32b': {'loc': u'[52:52]'},
                                                                          u'DalIdReserved': {'descr': u'reserved board ID fields - not allocated',
                                                                                             'loc': u'[59:57]'},
                                                                          u'DalTopBtm': {'descr': u'0=top (jumper installed), 1=bottom (no jumper)',
                                                                                         'loc': u'[56:56]'},
                                                                          u'FpgaRightLeft_n': {'loc': u'[60:60]'},
                                                                          u'Lite': {'loc': u'[61:61]'},
                                                                          u'NumDplBuf': {'loc': u'[3:0]'},
                                                                          u'NumLinkEngines': {'loc': u'[7:4]'},
                                                                          u'NumPcieEp': {'loc': u'[23:20]'},
                                                                          u'NumPcieLanesMax': {'loc': u'[35:28]'},
                                                                          u'NumXcvr': {'loc': u'[19:12]'},
                                                                          u'PcieGenMax': {'loc': u'[27:24]'},
                                                                          u'Protocol': {'loc': u'[11:8]'},
                                                                          u'Xbar': {'loc': u'[48:48]'},
                                                                          u'XcvrSpeedMax': {'loc': u'[47:36]'},
                                                                          'default': u"64'h0",
                                                                          'offset': u"10'h1",
                                                                          'typ': u'RO'},
                                                             u'FpgaRev': {u'Author': {'descr': u't=tim, j=jay, d=duane,k=jdonkim,c=chi-wei,h=honda,g=gene,b=builder,f=barry feild',
                                                                                      'loc': u'[15:8]'},
                                                                          u'BitfileRev': {'loc': u'[7:0]'},
                                                                          u'RepoRev': {'descr': u'Intended for SVN rev id',
                                                                                       'loc': u'[39:16]'},
                                                                          'default': u"64'h0",
                                                                          'offset': u"10'h2",
                                                                          'typ': u'RO',
                                                                          u'yymmdd': {'loc': u'[63:40]'}},
                                                             u'IntervalPeriod': {u'clocks': {'descr': u"The number of 100MHz clock cycles that makes up an interval. Interval stats DAL packets are sent to the DPL on this period. \n      The following sample values shall be programmed for example interval period.\n      1  second: 40'h5f5e100 (Default value)\n      10 second: 40'h3b9aca00\n      30 second: 40'hb2d05e00\n      60 second: 40'h165a0bc00",
                                                                                             'loc': u'[39:0]'},
                                                                                 'default': u"64'h5f5e100",
                                                                                 'descr': u'Duration between each group of interval stats packets',
                                                                                 'offset': u"10'h11",
                                                                                 'typ': u'RW'},
                                                             u'LoopbackSerdesCfg': {u'Mode': {'descr': u"4'h0 : near-end internal loopback (within FPGA, serdes transmit to receive)\n      4'h1 : external loopback (at board transceiver)\n      4'h2 : far-end  loopback (at far-end FPGA)\n      Other encodings are reserved",
                                                                                              'loc': u'[3:0]'},
                                                                                    u'Product': {'descr': u"4'h0 : auto - FPGA bitfile specifies product family \n      4'h1 : force Bali bringup board\n      4'h2 : force Dominica bringup board\n      Other encodings are reserved",
                                                                                                 'loc': u'[11:8]'},
                                                                                    u'Rev': {'descr': u"4'h0 : rev A\n      Other encodings are reserved",
                                                                                             'loc': u'[7:4]'},
                                                                                    'default': u"64'h1",
                                                                                    'descr': u'Specifies the board revision, product, and loopback mode.  Based on the configuration, the FPGA automatically inverts TX/RX \n    SERDES interfaces to compensate for polarity inversions in board traces.',
                                                                                    'offset': u"10'h12",
                                                                                    'typ': u'RW'},
                                                             u'PCBRev': {u'AssemblyRev': {'descr': u'Increments if a assembly change leads to change in behavior',
                                                                                          'loc': u'[3:0]'},
                                                                         'default': u"64'h0",
                                                                         'offset': u"10'h3",
                                                                         'typ': u'RO'},
                                                             u'PCIE_Autoreset_Cnt': {'default': u"8'h0",
                                                                                     'offset': u"10'h18",
                                                                                     u'reset_count': {'descr': u'Number of autoresets initiated by the PCIE LTSSM monitor.',
                                                                                                      'loc': u'[7:0]'},
                                                                                     'typ': u'RO'},
                                                             u'ReconfigCtrl': {u'Direct': {'loc': u'[1:1]'},
                                                                               u'Retry': {'loc': u'[0:0]'},
                                                                               'offset': u"10'h4",
                                                                               'typ': u'RW'},
                                                             u'ReconfigStatus': {u'Busy': {'loc': u'[4:4]'},
                                                                                 u'Error': {'loc': u'[3:0]'},
                                                                                 u'Timeout': {'loc': u'[5:5]'},
                                                                                 'offset': u"10'h5",
                                                                                 'typ': u'RO'},
                                                             u'SFP_LoSig_Force_En': {u'En': {'descr': u'Used to force SFP LoSig to the value specified in SFP_LosSig_Force_Value.',
                                                                                             'loc': u'[23:0]'},
                                                                                     'default': u"64'h0",
                                                                                     'offset': u"10'h14",
                                                                                     'typ': u'RW'},
                                                             u'SFP_LoSig_Force_Value': {u'Value': {'descr': u'Value to force onto SFP LoSig when SFP_LoSig_Force_En is asserted.',
                                                                                                   'loc': u'[23:0]'},
                                                                                        'default': u"64'h0",
                                                                                        'offset': u"10'h15",
                                                                                        'typ': u'RW'},
                                                             u'TimeStamp': {u'Tick': {'descr': u'One tick represents 10 nano-seconds',
                                                                                      'loc': u'[55:0]'},
                                                                            'default': u"64'h0",
                                                                            'descr': u'Global timestamp register used for frame monitoring',
                                                                            'offset': u"10'h10",
                                                                            'typ': u'RO'},
                                                             u'_scratch': {u'_scratch': {'loc': u'[63:0]'},
                                                                           'default': u"64'd0",
                                                                           'offset': u"10'h0",
                                                                           'typ': u'RW'},
                                                             u'iSFP_LoSig': {u'Value': {'descr': u'Current value of iSFP_LOS from FPGA pin.',
                                                                                        'loc': u'[23:0]'},
                                                                             'default': u"64'h0",
                                                                             'offset': u"10'h16",
                                                                             'typ': u'RO'}},
 u'../../../../common/vi_design/ucstats/doc/ucstats_regs.xml': {u'ucstat_addr': {u'addr': {'descr': u'last value of uc_addr captured from UC bus',
                                                                                           'loc': u'[15:0]'},
                                                                                 'default': u"16'h0",
                                                                                 'descr': u'UC interface debug',
                                                                                 'offset': u"10'hB",
                                                                                 'typ': u'RO'},
                                                                u'ucstat_collision_cycle_count': {u'count': {'descr': u'Count of cycles bank select logic is unable to switch banks due to collision with LE reading',
                                                                                                             'loc': u'[31:0]'},
                                                                                                  'default': u"32'h0",
                                                                                                  'descr': u'Statistics and debug',
                                                                                                  'offset': u"10'hA",
                                                                                                  'typ': u'SATC'},
                                                                u'ucstat_ctl': {'default': u"1'h1",
                                                                                'descr': u'Control',
                                                                                u'le_en': {'descr': u'link engine interface enable',
                                                                                           'loc': u'[1:1]'},
                                                                                'offset': u"10'h0",
                                                                                u'tempsense_en': {'descr': u'temp sensor enable',
                                                                                                  'loc': u'[2:2]'},
                                                                                'typ': u'RW',
                                                                                u'uc_en': {'descr': u'ucstat interface enable',
                                                                                           'loc': u'[0:0]'}},
                                                                u'ucstat_data_in': {u'data': {'descr': u'last value received on UC bus',
                                                                                              'loc': u'[31:0]'},
                                                                                    'default': u"32'h0",
                                                                                    'descr': u'UC interface debug',
                                                                                    'offset': u"10'hC",
                                                                                    'typ': u'RO'},
                                                                u'ucstat_data_out': {u'data': {'descr': u'last value driven out by FPGA on UC bus',
                                                                                               'loc': u'[31:0]'},
                                                                                     'default': u"32'h0",
                                                                                     'descr': u'UC interface debug',
                                                                                     'offset': u"10'hD",
                                                                                     'typ': u'RO'},
                                                                u'ucstat_errors': {'default': u"8'h0",
                                                                                   'descr': u'Status',
                                                                                   'offset': u"10'h8",
                                                                                   u'sm_bank_error': {'descr': u'bank state machine in error state',
                                                                                                      'loc': u'[1:1]'},
                                                                                   u'sm_uc_error': {'descr': u'UC state machine in error state',
                                                                                                    'loc': u'[0:0]'},
                                                                                   'typ': u'RO'},
                                                                u'ucstat_fpga_temp': {'default': u"8'h0",
                                                                                      'descr': u'Status',
                                                                                      u'done': {'descr': u'FPGA temp sense done',
                                                                                                'loc': u'[8:8]'},
                                                                                      'offset': u"10'h9",
                                                                                      u'temp': {'descr': u'FPGA temperature from on-die thermal diode',
                                                                                                'loc': u'[7:0]'},
                                                                                      'typ': u'RO'},
                                                                u'ucstat_le_done_count': {u'count': {'descr': u'link engine done count',
                                                                                                     'loc': u'[31:0]'},
                                                                                          'default': u"8'h0",
                                                                                          'descr': u'Statistics and debug',
                                                                                          'offset': u"10'h2",
                                                                                          'typ': u'SATC'},
                                                                u'ucstat_le_req_count': {u'count': {'descr': u'link engine read request count',
                                                                                                    'loc': u'[31:0]'},
                                                                                         'default': u"8'h0",
                                                                                         'descr': u'Statistics and debug',
                                                                                         'offset': u"10'h1",
                                                                                         'typ': u'SATC'},
                                                                u'ucstat_uc_done_count': {u'count': {'descr': u'uController done count',
                                                                                                     'loc': u'[31:0]'},
                                                                                          'default': u"8'h0",
                                                                                          'descr': u'Statistics and debug',
                                                                                          'offset': u"10'h5",
                                                                                          'typ': u'SATC'},
                                                                u'ucstat_uc_early_done_count': {u'count': {'descr': u'uController early done count',
                                                                                                           'loc': u'[31:0]'},
                                                                                                'default': u"8'h0",
                                                                                                'descr': u'Statistics and debug',
                                                                                                'offset': u"10'h6",
                                                                                                'typ': u'SATC'},
                                                                u'ucstat_uc_invalid_addr_count': {u'count': {'descr': u'uController invalid address count',
                                                                                                             'loc': u'[31:0]'},
                                                                                                  'default': u"8'h0",
                                                                                                  'descr': u'Statistics and debug',
                                                                                                  'offset': u"10'h7",
                                                                                                  'typ': u'SATC'},
                                                                u'ucstat_uc_rd_count': {u'count': {'descr': u'uController read operation count',
                                                                                                   'loc': u'[31:0]'},
                                                                                        'default': u"8'h0",
                                                                                        'descr': u'Statistics and debug',
                                                                                        'offset': u"10'h3",
                                                                                        'typ': u'SATC'},
                                                                u'ucstat_uc_wr_count': {u'count': {'descr': u'uController write operation count',
                                                                                                   'loc': u'[31:0]'},
                                                                                        'default': u"8'h0",
                                                                                        'descr': u'Statistics and debug',
                                                                                        'offset': u"10'h4",
                                                                                        'typ': u'SATC'}},
 u'../../../../common/vi_design/ucstats/doc/ucstats_sfp_regs.xml': {u'SFP_power': {'default': u"32'h0",
                                                                                   'descr': u'SFP stats',
                                                                                   'offset': u"10'hB",
                                                                                   u'rx_power': {'descr': u'RX Power :  Measured  average optical power in mW. Represented as a 16 bit unsigned integer with the power defined as the full 16 bit value (0 - 65535) with LSB equal to 0.1 uW, yielding a total range of 0 to 6.5535 mW. Absolute accuracy is dependent upon the exact optical wavelength. For the specified wavelength, accuracy is +/-3dB.',
                                                                                                 'loc': u'[15:0]'},
                                                                                   u'tx_power': {'descr': u'RX Power :  Measured  average optical power in mW. Represented as a 16 bit unsigned integer with the power defined as the full 16 bit value (0 - 65535) with LSB equal to 0.1 uW, yielding a total range of 0 to 6.5535 mW. Absolute accuracy is dependent upon the exact optical wavelength. For the specified wavelength, accuracy is +/-3dB.',
                                                                                                 'loc': u'[31:16]'},
                                                                                   'typ': u'RO'},
                                                                    u'SFP_temperature_rate': {u'bit_rate': {'descr': u'1 Byte field.  Specifies  nominal bit rate in units of 100 Megabits/sec, rounded off to the nearest 100 Megabits/sec.  The bit rate includes those bits necessary to encode and delimit the signal as well as those bits carrying data information.  A value of 0 indicates that the bit rate is not specified.',
                                                                                                            'loc': u'[23:16]'},
                                                                                              'default': u"16'h0",
                                                                                              'descr': u'SFP stats',
                                                                                              'offset': u"10'hA",
                                                                                              u'temp': {'descr': u'Internally measured transceiver temperature. Represented as a 16 bit signed twos complement value in increments of 1/256 degrees Celsius, yielding a total range of -128C to +128C. Temperature measurement is valid from -40C to +125C with an accuracy of +/- 3C. The temperature sensor is located in the center of the module and is typically 5 to 10 degrees hotter than the module case.',
                                                                                                        'loc': u'[15:0]'},
                                                                                              'typ': u'RO'},
                                                                    u'alarm': {'default': u"32'h0",
                                                                               'descr': u'SFP stats',
                                                                               u'flags': {'descr': u'Alarm flags.  Once set, remains set until link engine read and UC write to zero.  refer to Finisar spec for more details.',
                                                                                          'loc': u'[31:0]'},
                                                                               'offset': u"10'hD",
                                                                               'typ': u'RO'},
                                                                    u'vendor_oui_sfp_present': {'default': u"32'hff",
                                                                                                'descr': u'SFP memory mapped register interface',
                                                                                                'offset': u"10'h0",
                                                                                                u'sfp_present': {'descr': u'- SFP Present : 00h - indicates not present, 01h - indicates present, FFh - reset state, indicates unknown',
                                                                                                                 'loc': u'[7:0]'},
                                                                                                'typ': u'RO',
                                                                                                u'vendor_oui': {'descr': u'vendor OUI: 3 byte vendor IEEE company identifier, all zero indicates OUI is unspecfieid.  Finisar transceivers contain values 00h, 90h, and 65h',
                                                                                                                'loc': u'[31:8]'}},
                                                                    u'vendor_part_number0': {'default': u"32'h0",
                                                                                             'descr': u'SFP memory mapped register interface',
                                                                                             'offset': u"10'h1",
                                                                                             'typ': u'RO',
                                                                                             u'vendor_pn0': {'descr': u'vendor part number (bytes 3-0) : 16 byte field that contains ASCII characters, left aligned, and padded on the right with ASCII spaces (20h).  Dfines the vendor part number or product name.  All zeros indicates vendor PN is unspecified',
                                                                                                             'loc': u'[31:0]'}},
                                                                    u'vendor_part_number1': {'default': u"32'h0",
                                                                                             'descr': u'SFP memory mapped register interface',
                                                                                             'offset': u"10'h2",
                                                                                             'typ': u'RO',
                                                                                             u'vendor_pn1': {'descr': u'vendor part number (bytes 7-4) : 16 byte field that contains ASCII characters, left aligned, and padded on the right with ASCII spaces (20h).  Dfines the vendor part number or product name.  All zeros indicates vendor PN is unspecified',
                                                                                                             'loc': u'[31:0]'}},
                                                                    u'vendor_part_number2': {'default': u"32'h0",
                                                                                             'descr': u'SFP memory mapped register interface',
                                                                                             'offset': u"10'h3",
                                                                                             'typ': u'RO',
                                                                                             u'vendor_pn2': {'descr': u'vendor part number (bytes 11-8) : 16 byte field that contains ASCII characters, left aligned, and padded on the right with ASCII spaces (20h).  Dfines the vendor part number or product name.  All zeros indicates vendor PN is unspecified',
                                                                                                             'loc': u'[31:0]'}},
                                                                    u'vendor_part_number3': {'default': u"32'h0",
                                                                                             'descr': u'SFP memory mapped register interface',
                                                                                             'offset': u"10'h4",
                                                                                             'typ': u'RO',
                                                                                             u'vendor_pn3': {'descr': u'vendor part number (bytes 15-12) : 16 byte field that contains ASCII characters, left aligned, and padded on the right with ASCII spaces (20h).  Dfines the vendor part number or product name.  All zeros indicates vendor PN is unspecified',
                                                                                                             'loc': u'[31:0]'}},
                                                                    u'vendor_revision_number': {'default': u"32'h0",
                                                                                                'descr': u'SFP memory mapped register interface',
                                                                                                'offset': u"10'h9",
                                                                                                'typ': u'RO',
                                                                                                u'vendor_rn': {'descr': u"vendor revision number : 4-byte field that contains ASCII characters, left-aligned and padded on the right with ASCII spaces (20h), defining the vendor's product revision number.  A value of all zero in the 4-byte field indicates that the vendor rev is unspecified.",
                                                                                                               'loc': u'[31:0]'}},
                                                                    u'vendor_serial_number0': {'default': u"32'h0",
                                                                                               'descr': u'SFP memory mapped register interface',
                                                                                               'offset': u"10'h5",
                                                                                               'typ': u'RO',
                                                                                               u'vendor_sn0': {'descr': u"vendor SN (bytes 3-0) : 16 character field that contains ASCII characters, left-aligned and padded on the right with ASCII space (20h), defining the vendor's serial number for the transceiver.  A value of all zeros in the 16-byte field indicates the vendor SN is unspecfieid",
                                                                                                               'loc': u'[31:0]'}},
                                                                    u'vendor_serial_number1': {'default': u"32'h0",
                                                                                               'descr': u'SFP memory mapped register interface',
                                                                                               'offset': u"10'h6",
                                                                                               'typ': u'RO',
                                                                                               u'vendor_sn1': {'descr': u"vendor SN (bytes 5-7) : 16 character field that contains ASCII characters, left-aligned and padded on the right with ASCII space (20h), defining the vendor's serial number for the transceiver.  A value of all zeros in the 16-byte field indicates the vendor SN is unspecfieid",
                                                                                                               'loc': u'[31:0]'}},
                                                                    u'vendor_serial_number2': {'default': u"32'h0",
                                                                                               'descr': u'SFP memory mapped register interface',
                                                                                               'offset': u"10'h7",
                                                                                               'typ': u'RO',
                                                                                               u'vendor_sn2': {'descr': u"vendor SN (bytes 8-11) : 16 character field that contains ASCII characters, left-aligned and padded on the right with ASCII space (20h), defining the vendor's serial number for the transceiver.  A value of all zeros in the 16-byte field indicates the vendor SN is unspecfieid",
                                                                                                               'loc': u'[31:0]'}},
                                                                    u'vendor_serial_number3': {'default': u"32'h0",
                                                                                               'descr': u'SFP memory mapped register interface',
                                                                                               'offset': u"10'h8",
                                                                                               'typ': u'RO',
                                                                                               u'vendor_sn3': {'descr': u"vendor SN (bytes 12-15) : 16 character field that contains ASCII characters, left-aligned and padded on the right with ASCII space (20h), defining the vendor's serial number for the transceiver.  A value of all zeros in the 16-byte field indicates the vendor SN is unspecfieid",
                                                                                                               'loc': u'[31:0]'}},
                                                                    u'warning': {'default': u"32'h0",
                                                                                 'descr': u'SFP stats',
                                                                                 u'flags': {'descr': u'Warning flags.  Once set, remains set until link engine read and UC write to zero.  refer to Finisar spec for more details.',
                                                                                            'loc': u'[31:0]'},
                                                                                 'offset': u"10'hC",
                                                                                 'typ': u'RO'}},
 u'../../../prototype/extractor/doc/extractor_regs.xml': {u'DatChnlFifoLevel': {u'count': {'descr': u'FIFO count',
                                                                                           'loc': u'[9:0]'},
                                                                                'default': u"64'h0",
                                                                                'descr': u'The maximum number of entries ever reached in the data channel FIFO. The value is latched until the register is written with a 0.',
                                                                                'offset': u"10'h6",
                                                                                'size': u"10'h1",
                                                                                'typ': u'MEM'},
                                                          u'DatChnlFifoStat': {u'Overflow': {'descr': u'FIFO overflow. The error status is permanently latched once the error occurs. This error is not supposed to happen. If set, it indicates hardware design error.',
                                                                                             'loc': u'[16:16]'},
                                                                               u'Underflow': {'descr': u'FIFO underflow. The error status is permanently latched once the error occurs. This error is not supposed to happen. If set, it indicates hardware design error.',
                                                                                              'loc': u'[17:17]'},
                                                                               u'Words': {'descr': u'Number of words in the FIFO',
                                                                                          'loc': u'[9:0]'},
                                                                               'default': u"64'h0",
                                                                               'descr': u'Data Channel FIFO status register',
                                                                               'offset': u"10'h5",
                                                                               'typ': u'RO'},
                                                          u'DataFrameBpCtr': {u'count': {'descr': u'Data frame back pressure drop count',
                                                                                         'loc': u'[31:0]'},
                                                                              'default': u"64'h0",
                                                                              'descr': u'Number of data frames discarded when FIFO is getting full due to back pressure condition. It signals that the PCIe bus fails to drain those frames in time.',
                                                                              'offset': u"10'h4",
                                                                              'typ': u'FRC'},
                                                          u'ExtrEnable': {'default': u"64'h1",
                                                                          'descr': u'Extractor enable register',
                                                                          u'enable': {'descr': u'Extraction engine enable. This bit shall be set after the Template RAM has been initialized.',
                                                                                      'loc': u'[0:0]'},
                                                                          'offset': u"10'h1",
                                                                          'typ': u'RW'},
                                                          u'TemplStop': {u'Init': {'descr': u'Template RAM is not initialized when frames are received. Extractor enable register must be set properly.',
                                                                                   'loc': u'[3:3]'},
                                                                         u'Ofstorder': {'descr': u'Instruction offsets are not in increasing order. This error is not supposed to happen. If set, it indicates software programming error.',
                                                                                        'loc': u'[1:1]'},
                                                                         u'Overflow': {'descr': u'Attempt to extract more than 54 bytes. This error is not supposed to happen. If set, it indicates software programming error.',
                                                                                       'loc': u'[2:2]'},
                                                                         u'Zerobyte': {'descr': u'Zero byte was extracted from received frames. This can happen if all extracted patterns are zero or frame length is less than the smallest instruction offset.',
                                                                                       'loc': u'[0:0]'},
                                                                         'default': u"64'h0",
                                                                         'descr': u'Template RAM programming stop register',
                                                                         'offset': u"10'h10",
                                                                         'typ': u'RO'},
                                                          u'TemplateRam': {u'TemplateRam': {'loc': u'[63:0]'},
                                                                           'descr': u'Frame Extractor template program memory. The template memory stores the instructions the Frame Extractor uses to pull the bytes out of the incoming frames. There are 4 templates indexed by frame types.',
                                                                           'offset': u"10'h100",
                                                                           'size': u"10'h100",
                                                                           'typ': u'MEM'},
                                                          u'_scratch': {'default': u"64'h0",
                                                                        'descr': u'scratch register',
                                                                        'offset': u"10'h0",
                                                                        u'scratch': {'descr': u'scratch register',
                                                                                     'loc': u'[63:0]'},
                                                                        'typ': u'RW'}},
 u'../../../prototype/link_engine/doc/credit_stats_regs.xml': {u'CreditBBMax': {u'credit': {'descr': u'Buffer-to-buffer credit',
                                                                                            'loc': u'[31:0]'},
                                                                                'default': u"64'h0",
                                                                                'descr': u'Maximum buffer-to-buffer credits observed in the current time interval. Resets to 0x0 at the end of an interval.',
                                                                                'offset': u"10'h12",
                                                                                'typ': u'RO'},
                                                               u'CreditBBMin': {u'credit': {'descr': u'Buffer-to-buffer credit',
                                                                                            'loc': u'[31:0]'},
                                                                                'default': u"64'hFFFFFFFF",
                                                                                'descr': u'This is the minimum number the Credit Counter reached during the interval',
                                                                                'offset': u"10'h11",
                                                                                'typ': u'RO'},
                                                               u'CreditCounter': {u'credit': {'descr': u'Buffer-to-buffer credit',
                                                                                              'loc': u'[31:0]'},
                                                                                  'default': u"64'h1000000",
                                                                                  'descr': u'This counter is incremented every time a frame is detecting coming in, and decremented every time an RC_RDY is seen on the oposite channel.  It is NOT reset at the end of the interval.',
                                                                                  'offset': u"10'h13",
                                                                                  'typ': u'RO'},
                                                               u'CreditStart': {u'credit': {'descr': u'Buffer-to-buffer credit',
                                                                                            'loc': u'[31:0]'},
                                                                                'default': u"64'h1000000",
                                                                                'descr': u'The initialization value loaded into Credit Counter.',
                                                                                'offset': u"10'h14",
                                                                                'typ': u'RW'},
                                                               u'TimeMinCredit': {'default': u"64'h0",
                                                                                  'descr': u'Total time spent at minimum buffer-to-buffer credits in the current time interval. Resets to 0x0 at the end of an interval, and resets if a new minumum Credit Count is detected..',
                                                                                  'offset': u"10'h10",
                                                                                  u'tick': {'descr': u'clock ticks',
                                                                                            'loc': u'[31:0]'},
                                                                                  'typ': u'RO'},
                                                               u'_scratch': {'default': u"64'h0",
                                                                             'descr': u'Scratch register',
                                                                             'offset': u"10'h0",
                                                                             u'scratch': {'descr': u'scratch register',
                                                                                          'loc': u'[63:0]'},
                                                                             'typ': u'RW'}},
 u'../../../prototype/link_engine/doc/link_engine_regs.xml': {u'DataLinkFifoLevel': {u'Words': {'descr': u'Number of words in the FIFO',
                                                                                                'loc': u'[12:0]'},
                                                                                     'default': u"64'h0",
                                                                                     'descr': u'The maximum number of entries ever reached in the data link FIFO. The value is latched until the register is written with a 0.',
                                                                                     'offset': u"10'h11",
                                                                                     'size': u"10'h1",
                                                                                     'typ': u'MEM'},
                                                              u'DataLinkFifoStat': {u'Overflow': {'descr': u'FIFO overflow. The error status is permanently latched once the error occurs. This error is not supposed to happen. If set, it indicates hardware design error.',
                                                                                                  'loc': u'[16:16]'},
                                                                                    u'Underflow': {'descr': u'FIFO underflow. The error status is permanently latched once the error occurs. This error is not supposed to happen. If set, it indicates hardware design error.',
                                                                                                   'loc': u'[17:17]'},
                                                                                    u'Words': {'descr': u'Number of words in the FIFO',
                                                                                               'loc': u'[12:0]'},
                                                                                    'default': u"64'h0",
                                                                                    'descr': u'Data Channel FIFO status register',
                                                                                    'offset': u"10'h10",
                                                                                    'typ': u'RO'},
                                                              u'InvlDropCtr': {u'count': {'descr': u'Occurrence count',
                                                                                          'loc': u'[7:0]'},
                                                                               'default': u"64'h0",
                                                                               'descr': u'Number of times the Interval Stats FIFO is full when interval timer expires. There are 4 interval stats packets discarded per occurrence.',
                                                                               'offset': u"10'h30",
                                                                               'typ': u'SATC'},
                                                              u'InvlStatStop': {u'Overflow': {'descr': u'Interval stats FIFO overflow. If set, it indicates hardware design error.',
                                                                                              'loc': u'[0:0]'},
                                                                                u'TooSoon': {'descr': u'Interval timer times out too soon. If set, it indicates software programming error to interval stats timer register.',
                                                                                             'loc': u'[2:2]'},
                                                                                u'Underflow': {'descr': u'Interval stats FIFO underflow. If set, it indicates hardware design error.',
                                                                                               'loc': u'[1:1]'},
                                                                                'default': u"64'h0",
                                                                                'descr': u'Interval stats error stop register.',
                                                                                'offset': u"10'h20",
                                                                                'typ': u'RO'},
                                                              u'LinkCtrl': {u'LinkSpeed': {'descr': u'0x0=1G, 0x1=2G, 0x2=4G, 0x3=8G.',
                                                                                           'loc': u'[3:0]'},
                                                                            u'MonitorMode': {'descr': u'0x0=Off. 0x1=Interval Only: allows interval stats to be generated and sent to the DPLBUF. 0x2=Normal Mode: allow interval stats and data to be sent to the DPLBUF.',
                                                                                             'loc': u'[11:8]'},
                                                                            u'RateSel': {'descr': u'Set 1 for 8G. Set 0 for 1G,2G, 4G.',
                                                                                         'loc': u'[4:4]'},
                                                                            u'ScrmEnbl': {'descr': u"Controls the sramble-enable bit of the MTIP controllers for each channel of this link. Setting this bit to a '1'. will set the register bit within the MTIP controllers. Clearing this bit to '0' will clear the register bit within the MTIP controller.",
                                                                                          'loc': u'[5:5]'},
                                                                            'default': u"64'h13",
                                                                            'descr': u'Link control register.',
                                                                            'offset': u"10'h2",
                                                                            'typ': u'RW',
                                                                            'usr': u'1'},
                                                              u'LinkFlush': {u'Done': {'descr': u'1=Link data path is completely flushed. There is no stale packets in any of the FIFOs.',
                                                                                       'loc': u'[0:0]'},
                                                                             'default': u"64'h0",
                                                                             'descr': u'Link flush register.',
                                                                             'offset': u"10'h4",
                                                                             'typ': u'RO'},
                                                              u'LinkStatus': {u'DroppingCh0': {'descr': u'1=Channel FIFO dropping frames, 0=not dropping frames.',
                                                                                               'loc': u'[12:12]'},
                                                                              u'DroppingCh1': {'descr': u'1=Channel FIFO dropping frames, 0=not dropping frames.',
                                                                                               'loc': u'[13:13]'},
                                                                              u'LinkSpeed': {'descr': u'0x0=1G, 0x1=2G, 0x2=4G, 0x3=8G. 0xF=Unknown state.',
                                                                                             'loc': u'[3:0]'},
                                                                              u'LosigCh0': {'descr': u'1=SFP loss of signal, 0=SFP signal present.',
                                                                                            'loc': u'[5:5]'},
                                                                              u'LosigCh1': {'descr': u'1=SFP loss of signal, 0=SFP signal present.',
                                                                                            'loc': u'[9:9]'},
                                                                              u'LosyncCh0': {'descr': u'1=MTIP loss of sync, 0=MTIP in sync.',
                                                                                             'loc': u'[4:4]'},
                                                                              u'LosyncCh1': {'descr': u'1=MTIP loss of sync, 0=MTIP in sync.',
                                                                                             'loc': u'[8:8]'},
                                                                              'default': u"64'h0",
                                                                              'descr': u'Link status register.',
                                                                              'offset': u"10'h3",
                                                                              'typ': u'RO'},
                                                              u'TaDalDataCtr': {u'count': {'descr': u'DAL packet count',
                                                                                           'loc': u'[31:0]'},
                                                                                'default': u"64'h0",
                                                                                'descr': u'Number of 64-byte DAL data packets processed by the Time Arbiter.',
                                                                                'offset': u"10'h7",
                                                                                'typ': u'FRC'},
                                                              u'TaDalStatCtr': {u'count': {'descr': u'DAL packet count',
                                                                                           'loc': u'[31:0]'},
                                                                                'default': u"64'h0",
                                                                                'descr': u'Number of 64-byte DAL stats packets processed by the Time Arbiter.',
                                                                                'offset': u"10'h8",
                                                                                'typ': u'FRC'},
                                                              u'TaDalZeroCtr': {u'count': {'descr': u'DAL packet count',
                                                                                           'loc': u'[31:0]'},
                                                                                'default': u"64'h0",
                                                                                'descr': u'Number of zero filling 64-byte packets in the DAL data 4KB blocks by the Time Arbiter.',
                                                                                'offset': u"10'h9",
                                                                                'typ': u'FRC'},
                                                              u'TaFifoStop': {u'Ch0Overflow': {'descr': u'Channel 0 good timestamp FIFO overlow.',
                                                                                               'loc': u'[0:0]'},
                                                                              u'Ch0Underflow': {'descr': u'Channel 0 good timestamp FIFO underflow.',
                                                                                                'loc': u'[1:1]'},
                                                                              u'Ch1Overflow': {'descr': u'Channel 1 good timestamp FIFO overlow.',
                                                                                               'loc': u'[2:2]'},
                                                                              u'Ch1Underflow': {'descr': u'Channel 1 good timestamp FIFO underflow.',
                                                                                                'loc': u'[3:3]'},
                                                                              u'InvlOverflow': {'descr': u'Interval stats good timestamp FIFO overlow.',
                                                                                                'loc': u'[4:4]'},
                                                                              u'InvlUnderflow': {'descr': u'Interval stats good timestamp FIFO underflow.',
                                                                                                 'loc': u'[5:5]'},
                                                                              'default': u"64'h0",
                                                                              'descr': u'Time arbiter FIFO error stop register. If set, it indicates hardware design error.',
                                                                              'offset': u"10'h21",
                                                                              'typ': u'RO'},
                                                              u'_scratch': {'default': u"64'h0",
                                                                            'descr': u'Scratch register',
                                                                            'offset': u"10'h0",
                                                                            u'scratch': {'descr': u'scratch register',
                                                                                         'loc': u'[63:0]'},
                                                                            'typ': u'RW'}},
 u'../../../prototype/mtip_if/doc/mtip_if_fc1_regs.xml': {u'DispErrCtr': {u'count': {'descr': u'Disparity error count',
                                                                                     'loc': u'[31:0]'},
                                                                          'default': u"64'h0",
                                                                          'descr': u'Number of bad disparity errors counted. It is a free running counter and rolls over after reaching maximum.',
                                                                          'offset': u"10'h10",
                                                                          'typ': u'FRC'},
                                                          u'EofErrCtr': {u'count': {'descr': u'EOF error count',
                                                                                    'loc': u'[31:0]'},
                                                                         'default': u"64'h0",
                                                                         'descr': u'Number of bad or missing EOF errors counted. It is a free running counter and rolls over after reaching maximum.',
                                                                         'offset': u"10'h13",
                                                                         'typ': u'FRC'},
                                                          u'InvldErrCtr': {u'count': {'descr': u'Invalid character error count',
                                                                                      'loc': u'[31:0]'},
                                                                           'default': u"64'h0",
                                                                           'descr': u'Number of invalid character errors counted. It is a free running counter and rolls over after reaching maximum.',
                                                                           'offset': u"10'h11",
                                                                           'typ': u'FRC'},
                                                          u'PrimLinkUpCtr': {u'count': {'descr': u'Link up event count',
                                                                                        'loc': u'[31:0]'},
                                                                             'default': u"64'h0",
                                                                             'descr': u'Counter for number of times the link has returned to an idle state after the transmission of LOS, LOSIG, LIP, or NOS/OLS event. It is a free running counter and rolls over after reaching maximum.',
                                                                             'offset': u"10'h23",
                                                                             'typ': u'FRC'},
                                                          u'PrimLipCtr': {u'count': {'descr': u'LIP event count',
                                                                                     'loc': u'[31:0]'},
                                                                          'default': u"64'h0",
                                                                          'descr': u'Counter for number of LIP event primitive sequence seen. Note that this is not the number of LIP primitives. It is a free running counter and rolls over after reaching maximum.',
                                                                          'offset': u"10'h20",
                                                                          'typ': u'FRC'},
                                                          u'PrimLrLrrCtr': {u'count': {'descr': u'LR/LRR event count',
                                                                                       'loc': u'[31:0]'},
                                                                            'default': u"64'h0",
                                                                            'descr': u'Counter for number of LR/LRR event primitive sequence seen. Note that this is not the number of LR/LRR primitives. It is a free running counter and rolls over after reaching maximum.',
                                                                            'offset': u"10'h22",
                                                                            'typ': u'FRC'},
                                                          u'PrimNosOlsCtr': {u'count': {'descr': u'NOS/OLS event count',
                                                                                        'loc': u'[31:0]'},
                                                                             'default': u"64'h0",
                                                                             'descr': u'Counter for number of NOS/OLS event primitive sequence seen. Note that this is not the number of NOS/OLS primitives. It is a free running counter and rolls over after reaching maximum.',
                                                                             'offset': u"10'h21",
                                                                             'typ': u'FRC'},
                                                          u'SofErrCtr': {u'count': {'descr': u'EOF error count',
                                                                                    'loc': u'[31:0]'},
                                                                         'default': u"64'h0",
                                                                         'descr': u'Number of bad or missing SOF errors counted. It is a free running counter and rolls over after reaching maximum.',
                                                                         'offset': u"10'h12",
                                                                         'typ': u'FRC'},
                                                          u'_scratch': {'default': u"64'h0",
                                                                        'descr': u'Scratch register',
                                                                        'offset': u"10'h0",
                                                                        u'scratch': {'descr': u'scratch register',
                                                                                     'loc': u'[63:0]'},
                                                                        'typ': u'RW'}},
 u'../../../prototype/mtip_if/doc/mtip_if_fc2_regs.xml': {u'FcCrcErrCtr': {u'count': {'descr': u'CRC error count',
                                                                                      'loc': u'[31:0]'},
                                                                           'default': u"64'h0",
                                                                           'descr': u'Number of FC frames with CRC error. It is a free running counter and rolls over after reaching maximum.',
                                                                           'offset': u"10'h11",
                                                                           'typ': u'FRC'},
                                                          u'FcEofErrCtr': {u'count': {'descr': u'EOF error count',
                                                                                      'loc': u'[31:0]'},
                                                                           'default': u"64'h0",
                                                                           'descr': u'Number of FC frames treated as invalid due to ending with an EOFa/EOFni/EOFdti character. It is a free running counter and rolls over after reaching maximum.',
                                                                           'offset': u"10'h13",
                                                                           'typ': u'FRC'},
                                                          u'FcFrmCtr': {u'count': {'descr': u'Receive frame count',
                                                                                   'loc': u'[31:0]'},
                                                                        'default': u"64'h0",
                                                                        'descr': u'Number of FC frames with and without error. It is a free running counter and rolls over after reaching maximum.',
                                                                        'offset': u"10'h10",
                                                                        'typ': u'FRC'},
                                                          u'FcLosErrCtr': {u'count': {'descr': u'Loss of sync error count',
                                                                                      'loc': u'[31:0]'},
                                                                           'default': u"64'h0",
                                                                           'descr': u'Number of loss of sync counted. Loss of sync indicates the serdes receiver frequency is not locked. It is a free running counter and rolls over after reaching maximum.',
                                                                           'offset': u"10'h14",
                                                                           'typ': u'FRC'},
                                                          u'FcLosIErrCtr': {u'count': {'descr': u'Loss of signal error count',
                                                                                       'loc': u'[31:0]'},
                                                                            'default': u"64'h0",
                                                                            'descr': u'Number of loss of signal counted. It is the loss of optical signal from SFP. It is a free running counter and rolls over after reaching maximum.',
                                                                            'offset': u"10'h15",
                                                                            'typ': u'FRC'},
                                                          u'FcShortErrCtr': {u'count': {'descr': u'Short frame error count',
                                                                                        'loc': u'[31:0]'},
                                                                             'default': u"64'h0",
                                                                             'descr': u'Number of short FC frames being discarded. Short frames are defined as less than or equal to 8 bytes excluding SOF/EOF delimiters. It is a free running counter and rolls over after reaching maximum.',
                                                                             'offset': u"10'h20",
                                                                             'typ': u'FRC'},
                                                          u'FcTruncErrCtr': {u'count': {'descr': u'Truncation error count',
                                                                                        'loc': u'[31:0]'},
                                                                             'default': u"64'h0",
                                                                             'descr': u'Number of FC frames with improperly truncated error (e.g. jabber or runt frames). It is a free running counter and rolls over after reaching maximum.',
                                                                             'offset': u"10'h12",
                                                                             'typ': u'FRC'},
                                                          u'FramingStop': {u'b2beop': {'descr': u'Back to back EOP framing error received from MTIP.',
                                                                                       'loc': u'[1:1]'},
                                                                           u'b2bsop': {'descr': u'Back to back SOP framing error received from MTIP.',
                                                                                       'loc': u'[0:0]'},
                                                                           'default': u"64'h0",
                                                                           'descr': u'Framing stop error register',
                                                                           'offset': u"10'h40",
                                                                           'typ': u'RO'},
                                                          u'SingleStep': {u'cnt': {'descr': u'The number of DAL packets delivered to software.',
                                                                                   'loc': u'[7:0]'},
                                                                          'default': u"64'h0",
                                                                          'descr': u'Single step debug register',
                                                                          u'mode': {'descr': u'When this bit is set, single step debug mode is enabled. Received frames are not processed until start bit is set to 1.',
                                                                                    'loc': u'[31:31]'},
                                                                          'offset': u"10'h30",
                                                                          u'start': {'descr': u'When this bit is set along with bits 7:0, certain number of data, control, pause DAL packets are delivered. The subsequent frames are discarded once the threshold is reached. To receive the next batch of DAL packets, the start bit must be written with 0 first. Then it can be changed from 0 to 1 again.',
                                                                                     'loc': u'[30:30]',
                                                                                     'typ': u'RW'},
                                                                          'typ': u'RW'},
                                                          u'TsFifoStat': {u'Overflow': {'descr': u'FIFO overflow. The error status is permanently latched once the error occurs. This error is not supposed to happen. If set, it indicates hardware design error.',
                                                                                        'loc': u'[16:16]'},
                                                                          u'Underflow': {'descr': u'FIFO underflow. The error status is permanently latched once the error occurs. This error is not supposed to happen. If set, it indicates hardware design error.',
                                                                                         'loc': u'[17:17]'},
                                                                          u'Words': {'descr': u'Most number of timestamp entries in the FIFO',
                                                                                     'loc': u'[4:0]'},
                                                                          'default': u"64'h0",
                                                                          'descr': u'Timestamp FIFO status register',
                                                                          'offset': u"10'h22",
                                                                          'typ': u'RO'},
                                                          u'_scratch': {'default': u"64'h0",
                                                                        'descr': u'Scratch register',
                                                                        'offset': u"10'h0",
                                                                        u'scratch': {'descr': u'scratch register',
                                                                                     'loc': u'[63:0]'},
                                                                        'typ': u'RW'},
                                                          u'mtip_debug': {u'comma_det': {'loc': u'[12:12]'},
                                                                          u'dec_error': {'loc': u'[5:5]'},
                                                                          'default': u"64'h0",
                                                                          'descr': u'mtip_debug register',
                                                                          u'ff_rx_dsav': {'loc': u'[18:18]'},
                                                                          u'ff_rx_dval': {'loc': u'[13:13]'},
                                                                          u'ff_rx_eop': {'loc': u'[16:16]'},
                                                                          u'ff_rx_err': {'loc': u'[15:15]'},
                                                                          u'ff_rx_rdy': {'loc': u'[14:14]'},
                                                                          u'ff_rx_sop': {'loc': u'[17:17]'},
                                                                          u'ff_tx_mod': {'loc': u'[20:19]'},
                                                                          u'led_link_online': {'loc': u'[21:21]'},
                                                                          u'led_link_sync': {'loc': u'[22:22]'},
                                                                          u'node_fault': {'loc': u'[1:1]'},
                                                                          u'node_off_line': {'loc': u'[3:3]'},
                                                                          u'node_on_line': {'loc': u'[2:2]'},
                                                                          u'node_recovery': {'loc': u'[0:0]'},
                                                                          'offset': u"10'h41",
                                                                          u'reserved': {'loc': u'[63:49]'},
                                                                          u'rx_char_err': {'loc': u'[23:23]'},
                                                                          u'rx_class': {'loc': u'[47:44]'},
                                                                          u'rx_class_val': {'loc': u'[48:48]'},
                                                                          u'rx_crc_err': {'loc': u'[9:9]'},
                                                                          u'rx_disp_err': {'loc': u'[24:24]'},
                                                                          u'rx_end_code': {'loc': u'[42:39]'},
                                                                          u'rx_end_code_val': {'loc': u'[43:43]'},
                                                                          u'rx_fc1_err': {'loc': u'[25:25]'},
                                                                          u'rx_fc1_kchn': {'loc': u'[26:26]'},
                                                                          u'rx_frm_discard': {'loc': u'[8:8]'},
                                                                          u'rx_frm_rcv': {'loc': u'[6:6]'},
                                                                          u'rx_length_err': {'loc': u'[7:7]'},
                                                                          u'rx_phy_los': {'loc': u'[11:11]'},
                                                                          u'rx_primitive': {'loc': u'[38:27]'},
                                                                          u'scrb_ena': {'loc': u'[10:10]'},
                                                                          u'sync_acqurd': {'loc': u'[4:4]'},
                                                                          'typ': u'RO'}},
 u'../../fc8clkrst/doc/fc8clkrst_regs.xml': {u'ClkCtrCtrl': {u'LatchAndRst': {'loc': u'[0:0]',
                                                                              'typ': u'SC'},
                                                             'default': u"64'd0",
                                                             'descr': u'Reset Control Register for all clock counters',
                                                             'offset': u"10'h006",
                                                             'typ': u'RW'},
                                             u'ClkCtrFcCore': {u'ClkCtrFcCore': {'loc': u'[23:0]',
                                                                                 'typ': u'RO'},
                                                               'default': u"64'd0",
                                                               'offset': u"10'h007",
                                                               'typ': u'RO'},
                                             u'ClkCtrPcie': {u'ClkCtrPcie': {'loc': u'[23:0]',
                                                                             'typ': u'RO'},
                                                             'default': u"64'd0",
                                                             'offset': u"10'h008",
                                                             'typ': u'RO'},
                                             u'ClkCtrSerdes0_0': {u'RxRecClk': {'loc': u'[23:0]',
                                                                                'typ': u'RO'},
                                                                  u'TxClk': {'loc': u'[55:32]',
                                                                             'typ': u'RO'},
                                                                  'default': u"64'd0",
                                                                  'offset': u"10'h010",
                                                                  'typ': u'RO'},
                                             u'ClkCtrSerdes0_1': {u'RxRecClk': {'loc': u'[23:0]',
                                                                                'typ': u'RO'},
                                                                  u'TxClk': {'loc': u'[55:32]',
                                                                             'typ': u'RO'},
                                                                  'default': u"64'd0",
                                                                  'offset': u"10'h011",
                                                                  'typ': u'RO'},
                                             u'ClkCtrSerdes10_0': {u'RxRecClk': {'loc': u'[23:0]',
                                                                                 'typ': u'RO'},
                                                                   u'TxClk': {'loc': u'[55:32]',
                                                                              'typ': u'RO'},
                                                                   'default': u"64'd0",
                                                                   'offset': u"10'h024",
                                                                   'typ': u'RO'},
                                             u'ClkCtrSerdes10_1': {u'RxRecClk': {'loc': u'[23:0]',
                                                                                 'typ': u'RO'},
                                                                   u'TxClk': {'loc': u'[55:32]',
                                                                              'typ': u'RO'},
                                                                   'default': u"64'd0",
                                                                   'offset': u"10'h025",
                                                                   'typ': u'RO'},
                                             u'ClkCtrSerdes11_0': {u'RxRecClk': {'loc': u'[23:0]',
                                                                                 'typ': u'RO'},
                                                                   u'TxClk': {'loc': u'[55:32]',
                                                                              'typ': u'RO'},
                                                                   'default': u"64'd0",
                                                                   'offset': u"10'h026",
                                                                   'typ': u'RO'},
                                             u'ClkCtrSerdes11_1': {u'RxRecClk': {'loc': u'[23:0]',
                                                                                 'typ': u'RO'},
                                                                   u'TxClk': {'loc': u'[55:32]',
                                                                              'typ': u'RO'},
                                                                   'default': u"64'd0",
                                                                   'offset': u"10'h027",
                                                                   'typ': u'RO'},
                                             u'ClkCtrSerdes1_0': {u'RxRecClk': {'loc': u'[23:0]',
                                                                                'typ': u'RO'},
                                                                  u'TxClk': {'loc': u'[55:32]',
                                                                             'typ': u'RO'},
                                                                  'default': u"64'd0",
                                                                  'offset': u"10'h012",
                                                                  'typ': u'RO'},
                                             u'ClkCtrSerdes1_1': {u'RxRecClk': {'loc': u'[23:0]',
                                                                                'typ': u'RO'},
                                                                  u'TxClk': {'loc': u'[55:32]',
                                                                             'typ': u'RO'},
                                                                  'default': u"64'd0",
                                                                  'offset': u"10'h013",
                                                                  'typ': u'RO'},
                                             u'ClkCtrSerdes2_0': {u'RxRecClk': {'loc': u'[23:0]',
                                                                                'typ': u'RO'},
                                                                  u'TxClk': {'loc': u'[55:32]',
                                                                             'typ': u'RO'},
                                                                  'default': u"64'd0",
                                                                  'offset': u"10'h014",
                                                                  'typ': u'RO'},
                                             u'ClkCtrSerdes2_1': {u'RxRecClk': {'loc': u'[23:0]',
                                                                                'typ': u'RO'},
                                                                  u'TxClk': {'loc': u'[55:32]',
                                                                             'typ': u'RO'},
                                                                  'default': u"64'd0",
                                                                  'offset': u"10'h015",
                                                                  'typ': u'RO'},
                                             u'ClkCtrSerdes3_0': {u'RxRecClk': {'loc': u'[23:0]',
                                                                                'typ': u'RO'},
                                                                  u'TxClk': {'loc': u'[55:32]',
                                                                             'typ': u'RO'},
                                                                  'default': u"64'd0",
                                                                  'offset': u"10'h016",
                                                                  'typ': u'RO'},
                                             u'ClkCtrSerdes3_1': {u'RxRecClk': {'loc': u'[23:0]',
                                                                                'typ': u'RO'},
                                                                  u'TxClk': {'loc': u'[55:32]',
                                                                             'typ': u'RO'},
                                                                  'default': u"64'd0",
                                                                  'offset': u"10'h017",
                                                                  'typ': u'RO'},
                                             u'ClkCtrSerdes4_0': {u'RxRecClk': {'loc': u'[23:0]',
                                                                                'typ': u'RO'},
                                                                  u'TxClk': {'loc': u'[55:32]',
                                                                             'typ': u'RO'},
                                                                  'default': u"64'd0",
                                                                  'offset': u"10'h018",
                                                                  'typ': u'RO'},
                                             u'ClkCtrSerdes4_1': {u'RxRecClk': {'loc': u'[23:0]',
                                                                                'typ': u'RO'},
                                                                  u'TxClk': {'loc': u'[55:32]',
                                                                             'typ': u'RO'},
                                                                  'default': u"64'd0",
                                                                  'offset': u"10'h019",
                                                                  'typ': u'RO'},
                                             u'ClkCtrSerdes5_0': {u'RxRecClk': {'loc': u'[23:0]',
                                                                                'typ': u'RO'},
                                                                  u'TxClk': {'loc': u'[55:32]',
                                                                             'typ': u'RO'},
                                                                  'default': u"64'd0",
                                                                  'offset': u"10'h01A",
                                                                  'typ': u'RO'},
                                             u'ClkCtrSerdes5_1': {u'RxRecClk': {'loc': u'[23:0]',
                                                                                'typ': u'RO'},
                                                                  u'TxClk': {'loc': u'[55:32]',
                                                                             'typ': u'RO'},
                                                                  'default': u"64'd0",
                                                                  'offset': u"10'h01B",
                                                                  'typ': u'RO'},
                                             u'ClkCtrSerdes6_0': {u'RxRecClk': {'loc': u'[23:0]',
                                                                                'typ': u'RO'},
                                                                  u'TxClk': {'loc': u'[55:32]',
                                                                             'typ': u'RO'},
                                                                  'default': u"64'd0",
                                                                  'offset': u"10'h01C",
                                                                  'typ': u'RO'},
                                             u'ClkCtrSerdes6_1': {u'RxRecClk': {'loc': u'[23:0]',
                                                                                'typ': u'RO'},
                                                                  u'TxClk': {'loc': u'[55:32]',
                                                                             'typ': u'RO'},
                                                                  'default': u"64'd0",
                                                                  'offset': u"10'h01D",
                                                                  'typ': u'RO'},
                                             u'ClkCtrSerdes7_0': {u'RxRecClk': {'loc': u'[23:0]',
                                                                                'typ': u'RO'},
                                                                  u'TxClk': {'loc': u'[55:32]',
                                                                             'typ': u'RO'},
                                                                  'default': u"64'd0",
                                                                  'offset': u"10'h01E",
                                                                  'typ': u'RO'},
                                             u'ClkCtrSerdes7_1': {u'RxRecClk': {'loc': u'[23:0]',
                                                                                'typ': u'RO'},
                                                                  u'TxClk': {'loc': u'[55:32]',
                                                                             'typ': u'RO'},
                                                                  'default': u"64'd0",
                                                                  'offset': u"10'h01F",
                                                                  'typ': u'RO'},
                                             u'ClkCtrSerdes8_0': {u'RxRecClk': {'loc': u'[23:0]',
                                                                                'typ': u'RO'},
                                                                  u'TxClk': {'loc': u'[55:32]',
                                                                             'typ': u'RO'},
                                                                  'default': u"64'd0",
                                                                  'offset': u"10'h020",
                                                                  'typ': u'RO'},
                                             u'ClkCtrSerdes8_1': {u'RxRecClk': {'loc': u'[23:0]',
                                                                                'typ': u'RO'},
                                                                  u'TxClk': {'loc': u'[55:32]',
                                                                             'typ': u'RO'},
                                                                  'default': u"64'd0",
                                                                  'offset': u"10'h021",
                                                                  'typ': u'RO'},
                                             u'ClkCtrSerdes9_0': {u'RxRecClk': {'loc': u'[23:0]',
                                                                                'typ': u'RO'},
                                                                  u'TxClk': {'loc': u'[55:32]',
                                                                             'typ': u'RO'},
                                                                  'default': u"64'd0",
                                                                  'offset': u"10'h022",
                                                                  'typ': u'RO'},
                                             u'ClkCtrSerdes9_1': {u'RxRecClk': {'loc': u'[23:0]',
                                                                                'typ': u'RO'},
                                                                  u'TxClk': {'loc': u'[55:32]',
                                                                             'typ': u'RO'},
                                                                  'default': u"64'd0",
                                                                  'offset': u"10'h023",
                                                                  'typ': u'RO'},
                                             u'ClkCtrTxBist': {u'ClkCtrTxBist': {'loc': u'[23:0]',
                                                                                 'typ': u'RO'},
                                                               'default': u"64'd0",
                                                               'offset': u"10'h009",
                                                               'typ': u'RO'},
                                             u'ClkCtrXbar': {u'ClkCtrXbar': {'loc': u'[23:0]',
                                                                             'typ': u'RO'},
                                                             'default': u"64'd0",
                                                             'offset': u"10'h028",
                                                             'typ': u'RO'},
                                             u'RstCtrl_0': {u'ChipRst': {'descr': u'Performs reset to all blocks in FPGA\t\n\t\t\t           Blocks put in reset include: SERDES, Link Engine, PCIe, ChipReg, ClkRst',
                                                                         'loc': u'[0:0]',
                                                                         'typ': u'SC'},
                                                            u'LinkEngineRxRst': {'descr': u'link engine rx recovered clock domain per channel reset.',
                                                                                 'loc': u'[47:24]',
                                                                                 'typ': u'SC'},
                                                            u'LinkRst': {'descr': u'On a per link basis resets pipeline which includes: SERDES, LinkEngine, PCIe',
                                                                         'loc': u'[20:8]',
                                                                         'typ': u'SC'},
                                                            u'PllFcCoreRst': {'loc': u'[4:4]',
                                                                              'typ': u'SC'},
                                                            u'PllXbarRst': {'descr': u'Performs reset to XBAR.',
                                                                            'loc': u'[1:1]',
                                                                            'typ': u'SC'},
                                                            'default': u"64'd0",
                                                            'descr': u'Reset Control Register -',
                                                            'offset': u"10'h001",
                                                            'typ': u'RW'},
                                             u'RstCtrl_1': {u'LinkFcCoreRst': {'loc': u'[43:32]',
                                                                               'typ': u'SC'},
                                                            u'LinkPcieRst': {'loc': u'[59:48]',
                                                                             'typ': u'SC'},
                                                            u'LinkSerdesRxRst': {'loc': u'[12:0]',
                                                                                 'typ': u'SC'},
                                                            u'LinkSerdesTxRst': {'loc': u'[28:16]',
                                                                                 'typ': u'SC'},
                                                            'default': u"64'd0",
                                                            'descr': u'Reset Control Register - Per link reset of major blocks',
                                                            'offset': u"10'h002",
                                                            'typ': u'RW'},
                                             u'RstStatus': {u'ChipStatus': {'loc': u'[0:0]',
                                                                            'typ': u'RO'},
                                                            u'PllFcCoreLocked': {'loc': u'[4:4]',
                                                                                 'typ': u'RO'},
                                                            'default': u"64'd0",
                                                            'descr': u'Reset Status Register',
                                                            'offset': u"10'h003",
                                                            'typ': u'RO'},
                                             u'TxBistCtrl': {u'LinkSpeed': {'descr': u'Set clock rate for TxBist32b.\n               0 = 26...MHz   (1G)\n               1 = 53...MHz   (2G)\n               2 = 106.025MHz (4G)\n               3 = 212.5MHz   (8G)',
                                                                            'loc': u'[1:0]',
                                                                            'typ': u'RW'},
                                                             'default': u"64'd3",
                                                             'descr': u'TxBist32b clock control.',
                                                             'offset': u"10'h004",
                                                             'typ': u'RW'},
                                             u'TxBistStatus': {u'PllLock': {'loc': u'[0:0]',
                                                                            'typ': u'RO'},
                                                               'default': u"64'd0",
                                                               'descr': u'TxBistStatus',
                                                               'offset': u"10'h005",
                                                               'typ': u'RO'},
                                             u'_scratch': {u'_scratch': {'loc': u'[63:0]',
                                                                         'typ': u'RW'},
                                                           'default': u"64'd0",
                                                           'offset': u"10'h000",
                                                           'typ': u'RW'}},
 u'../../fc8pma/doc/dynamic_reconfig_regs.xml': {u'AEQ_ControlStatus': {u'AEQ_Busy': {'descr': u'Busy. When asserted, indicates that a reconfiguration operation is in progress.',
                                                                                      'loc': u'[8:8]'},
                                                                        u'AEQ_Error': {'descr': u'Error. When asserted, indicates an error. This bit is asserted when the channel address is invalid.',
                                                                                       'loc': u'[9:9]'},
                                                                        u'AEQ_Read': {'descr': u'Read. Writing a 1 to this bit triggers a read operation.',
                                                                                      'loc': u'[1:1]',
                                                                                      'typ': u'SC'},
                                                                        u'AEQ_Write': {'descr': u'Write. Writing a 1 to this bit triggers a write operation.',
                                                                                       'loc': u'[0:0]',
                                                                                       'typ': u'SC'},
                                                                        'default': u"32'h0",
                                                                        'descr': u'control and status',
                                                                        'offset': u"14'h2A",
                                                                        'typ': u'RO'},
                                                 u'AEQ_Data': {u'AEQ_Data': {'descr': u'Specifies the read or write data.',
                                                                             'loc': u'[15:0]'},
                                                               'default': u"32'h0",
                                                               'descr': u'data',
                                                               'offset': u"14'h2C",
                                                               'typ': u'RW'},
                                                 u'AEQ_LogicalChanNo': {u'AEQ_LogicalChanNo': {'descr': u'The logical channel number of the AEQ hardware to be accessed. Must be specified when performing dynamic updates. The Transceiver Reconfiguration Controller maps the logical address to the physical address.',
                                                                                               'loc': u'[9:0]'},
                                                                        'default': u"32'h0",
                                                                        'descr': u'logical channel number',
                                                                        'offset': u"14'h28",
                                                                        'typ': u'RW'},
                                                 u'AEQ_Offset': {u'AEQ_Offset': {'descr': u'Specifies the address of the AEQ register to be read or written.',
                                                                                 'loc': u'[3:0]'},
                                                                 'default': u"32'h0",
                                                                 'descr': u'aeq_offset',
                                                                 'offset': u"14'h2B",
                                                                 'typ': u'RW'},
                                                 u'AEQ_PhyChanAddr': {u'AEQ_PhyChanAddr': {'descr': u'The physical channel address. The Transceiver Reconfiguration Controller maps the logical address to the physical address.',
                                                                                           'loc': u'[9:0]'},
                                                                      'default': u"32'h0",
                                                                      'descr': u'physical channel address',
                                                                      'offset': u"14'h29",
                                                                      'typ': u'RO'},
                                                 u'ATX_ControlStatus': {u'ATX_Busy': {'descr': u'Busy. When asserted, indicates that a reconfiguration operation is in progress.',
                                                                                      'loc': u'[8:8]'},
                                                                        u'ATX_Error': {'descr': u'Error. When asserted, indicates an invalid channel or address. This bit is asserted after a write operation if the selected logical channel number selects a logical channel interface that is not connected to an ATX PLL. It is also be asserted if the tuning algorithm failed to converge on a working setting after a manual calibration.',
                                                                                       'loc': u'[9:9]'},
                                                                        u'ATX_Read': {'descr': u'Read. Writing a 1 to this bit triggers a read operation.',
                                                                                      'loc': u'[1:1]',
                                                                                      'typ': u'SC'},
                                                                        u'ATX_Write': {'descr': u'Write. Writing a 1 to this bit triggers a write operation.  0x33 [3:0] RW atx_offset Specifies the 4-bit register address used for indirect accesses',
                                                                                       'loc': u'[0:0]',
                                                                                       'typ': u'SC'},
                                                                        'default': u"32'h0",
                                                                        'descr': u'control and status',
                                                                        'offset': u"14'h32",
                                                                        'typ': u'RO'},
                                                 u'ATX_Data': {u'ATX_Data': {'descr': u'Reconfiguration data for the transceiver PHY registers.',
                                                                             'loc': u'[15:0]'},
                                                               'default': u"32'h0",
                                                               'descr': u'data',
                                                               'offset': u"14'h34",
                                                               'typ': u'RW'},
                                                 u'ATX_LogicalChanNo': {u'ATX_LogicalChanNo': {'descr': u'The logical channel number. The Transceiver Reconfiguration Controller maps the logical address to the physical address.',
                                                                                               'loc': u'[9:0]'},
                                                                        'default': u"32'h0",
                                                                        'descr': u'logical channel number',
                                                                        'offset': u"14'h30",
                                                                        'typ': u'RW'},
                                                 u'ATX_Offset': {u'ATX_Offset': {'descr': u'Specifies the 4-bit register address used for indirect to the PLL registers on the reconfiguration bus.',
                                                                                 'loc': u'[3:0]'},
                                                                 'default': u"32'h0",
                                                                 'descr': u'atx offset',
                                                                 'offset': u"14'h33",
                                                                 'typ': u'RW'},
                                                 u'DFE_ControlStatus': {u'DFE_Busy': {'descr': u'Busy. When asserted, indicates that a reconfiguration operation is in progress.',
                                                                                      'loc': u'[8:8]'},
                                                                        u'DFE_Error': {'descr': u'Error. When asserted, indicates an invalid channel or address.',
                                                                                       'loc': u'[9:9]'},
                                                                        u'DFE_Read': {'descr': u'Read. Writing a 1 to this bit triggers a read operation.',
                                                                                      'loc': u'[1:1]',
                                                                                      'typ': u'SC'},
                                                                        u'DFE_Write': {'descr': u'Write. Writing a 1 to this bit triggers a write operation.',
                                                                                       'loc': u'[0:0]',
                                                                                       'typ': u'SC'},
                                                                        'default': u"32'h0",
                                                                        'descr': u'control and status',
                                                                        'offset': u"14'h1A",
                                                                        'typ': u'RO'},
                                                 u'DFE_Data': {u'DFE_Data': {'descr': u'Reconfiguration data for the transceiver PHY registers.',
                                                                             'loc': u'[15:0]'},
                                                               'default': u"32'h0",
                                                               'descr': u'data',
                                                               'offset': u"14'h1C",
                                                               'typ': u'RW'},
                                                 u'DFE_LogicalChanNo': {u'DFE_LogicalChanNo': {'descr': u'The logical channel address. Must be specified when performing dynamic updates. The Transceiver Reconfiguration Controller maps the logical address to the physical address.',
                                                                                               'loc': u'[9:0]'},
                                                                        'default': u"32'h0",
                                                                        'descr': u'logical channel number',
                                                                        'offset': u"14'h18",
                                                                        'typ': u'RW'},
                                                 u'DFE_Offset': {u'DFE_Offset': {'descr': u'Specifies the 6-bit offset of the DFE register.',
                                                                                 'loc': u'[5:0]'},
                                                                 'default': u"32'h0",
                                                                 'descr': u'dfe_offset',
                                                                 'offset': u"14'h1B",
                                                                 'typ': u'RW'},
                                                 u'DFE_PhyChanAddr': {u'DFE_PhyChanAddr': {'descr': u'The physical channel address. The Transceiver Reconfiguration Controller maps the logical address to the physical address.  0x1A',
                                                                                           'loc': u'[9:0]'},
                                                                      'default': u"32'h0",
                                                                      'descr': u'physical channel address',
                                                                      'offset': u"14'h19",
                                                                      'typ': u'RW'},
                                                 u'EyeQ_ControlStatus': {u'EyeQ_Busy': {'descr': u'Busy. When asserted, indicates that a reconfiguration operation is in progress.',
                                                                                        'loc': u'[8:8]'},
                                                                         u'EyeQ_Error': {'descr': u'Error. When asserted, indicates an invalid channel or address.',
                                                                                         'loc': u'[9:9]'},
                                                                         u'EyeQ_Read': {'descr': u'Read. Writing a 1 to this bit triggers a read operation.',
                                                                                        'loc': u'[1:1]',
                                                                                        'typ': u'SC'},
                                                                         u'EyeQ_Write': {'descr': u'Write. Writing a 1 to this bit triggers a write operation.',
                                                                                         'loc': u'[0:0]',
                                                                                         'typ': u'SC'},
                                                                         'default': u"32'h0",
                                                                         'descr': u'control and status',
                                                                         'offset': u"14'h12",
                                                                         'typ': u'RO'},
                                                 u'EyeQ_Data': {u'EyeQ_Data': {'descr': u'Reconfiguration data for the transceiver PHY registers.',
                                                                               'loc': u'[15:0]'},
                                                                'default': u"32'h0",
                                                                'descr': u'data',
                                                                'offset': u"14'h14",
                                                                'typ': u'RW'},
                                                 u'EyeQ_LogicalChanNo': {u'EyeQ_LogicalChanNo': {'descr': u'The logical channel number. Must be specified when performing dynamic updates. The Transceiver Reconfiguration Controller maps the logical address to the physical address.',
                                                                                                 'loc': u'[9:0]'},
                                                                         'default': u"32'h0",
                                                                         'descr': u'logical channel number',
                                                                         'offset': u"14'h10",
                                                                         'typ': u'RW'},
                                                 u'EyeQ_Offset': {u'EyeQ_Offset': {'descr': u'Specifies the 6-bit offset of the EyeQ register.',
                                                                                   'loc': u'[5:0]'},
                                                                  'default': u"32'h0",
                                                                  'descr': u'eyeq offset',
                                                                  'offset': u"14'h13",
                                                                  'typ': u'RW'},
                                                 u'EyeQ_PhyChanAddr': {u'EyeQ_PhyChanAddr': {'descr': u'The physical channel address. The Transceiver Reconfiguration Controller maps the logical address to the physical address.',
                                                                                             'loc': u'[9:0]'},
                                                                       'default': u"32'h0",
                                                                       'descr': u'physical channel address',
                                                                       'offset': u"14'h11",
                                                                       'typ': u'RW'},
                                                 u'PLL_ControlStatus': {u'PLL_Error': {'descr': u'Error.  When asserted, indicates an error. This bit is asserted if any of the following conditions occur:   The channel address is invalid.   The PHY address is invalid.   The address offset is invalid.',
                                                                                       'loc': u'[9:9]'},
                                                                        u'PLL_MIF_Busy': {'descr': u'MIF Busy. When asserted, indicates that a reconfiguration operation is in progress.',
                                                                                          'loc': u'[8:8]'},
                                                                        u'PLL_Read': {'descr': u'Read. Writing a 1 to this bit specifies a read operation.',
                                                                                      'loc': u'[1:1]',
                                                                                      'typ': u'SC'},
                                                                        u'PLL_Write': {'descr': u'Write. Writing a 1 to this bit specifies a write operation.',
                                                                                       'loc': u'[0:0]',
                                                                                       'typ': u'SC'},
                                                                        'default': u"32'h0",
                                                                        'descr': u'control and status',
                                                                        'offset': u"14'h42",
                                                                        'typ': u'RO'},
                                                 u'PLL_Data': {u'PLL_Data': {'descr': u'Specifies the read or write data.',
                                                                             'loc': u'[15:0]'},
                                                               'default': u"32'h0",
                                                               'descr': u'data',
                                                               'offset': u"14'h44",
                                                               'typ': u'RW'},
                                                 u'PLL_LogicalChanNo': {u'PLL_LogicalChanNo': {'descr': u"The logical channel number. Must be specified when performing dynamic updates. The Transceiver Reconfiguration Controller maps the logical address to the physical address.  When reconfiguring the reference clock for the TX PLL you must specify the PLL's logical channel number. When reconfiguring the reference clock for the CDR you must specify the channel's logical channel number.",
                                                                                               'loc': u'[9:0]'},
                                                                        'default': u"32'h0",
                                                                        'descr': u'logical channel number',
                                                                        'offset': u"14'h40",
                                                                        'typ': u'RW'},
                                                 u'PLL_Offset': {u'PLL_Offset': {'descr': u'Specifies the 4-bit register address used for indirect to the PLL registers on the reconfiguration bus.',
                                                                                 'loc': u'[3:0]'},
                                                                 'default': u"32'h0",
                                                                 'descr': u'pll offset',
                                                                 'offset': u"14'h43",
                                                                 'typ': u'RW'},
                                                 u'PLL_PhyChanAddr': {u'PLL_PhyChanAddr': {'descr': u'The physical channel address. The Transceiver Reconfiguration Controller maps the logical address to the physical address.',
                                                                                           'loc': u'[9:0]'},
                                                                      'default': u"32'h0",
                                                                      'descr': u'physical channel address',
                                                                      'offset': u"14'h41",
                                                                      'typ': u'RO'},
                                                 u'PMA_ControlStatus': {u'PMA_Busy': {'descr': u'Busy. When asserted, indicates that a reconfiguration operation is in progress.',
                                                                                      'loc': u'[8:8]'},
                                                                        u'PMA_Error': {'descr': u'Error. When asserted, indicates an error. This bit is asserted if any of the following conditions occur:   The channel address is invalid.   The PHY address is invalid.   The PMA offset is invalid.',
                                                                                       'loc': u'[9:9]'},
                                                                        u'PMA_Read': {'descr': u'Read. Writing a 1 to this bit triggers a read operation.',
                                                                                      'loc': u'[1:1]',
                                                                                      'typ': u'SC'},
                                                                        u'PMA_Write': {'descr': u'Write. Writing a 1 to this bit triggers a write operation.',
                                                                                       'loc': u'[0:0]',
                                                                                       'typ': u'SC'},
                                                                        'default': u"32'h0",
                                                                        'descr': u'control and status',
                                                                        'offset': u"14'hA",
                                                                        'typ': u'RO'},
                                                 u'PMA_Data': {u'PMA_Data': {'descr': u'Reconfiguration data for the PMA analog settings.',
                                                                             'loc': u'[6:0]'},
                                                               'default': u"32'h0",
                                                               'descr': u'data',
                                                               'offset': u"14'hC",
                                                               'typ': u'RW'},
                                                 u'PMA_LogicalChanNo': {u'PMA_LogicalChanNo': {'descr': u'The logical channel number. Must be specified when performing dynamic updates. The Transceiver Reconfiguration Controller maps the logical address to the physical address.',
                                                                                               'loc': u'[9:0]'},
                                                                        'default': u"32'h0",
                                                                        'descr': u'logical channel number',
                                                                        'offset': u"14'h8",
                                                                        'typ': u'RW'},
                                                 u'PMA_Offset': {u'PMA_Offset': {'descr': u'Specifies the offset of the PMA analog setting to be reconfigured.',
                                                                                 'loc': u'[5:0]'},
                                                                 'default': u"32'h0",
                                                                 'descr': u'pma offset',
                                                                 'offset': u"14'hB",
                                                                 'typ': u'RW'},
                                                 u'PMA_PhyChanAddr': {u'PMA_PhyChanAddr': {'descr': u'The physical channel address. The Transceiver Reconfiguration Controller maps the logical address to the physical address.',
                                                                                           'loc': u'[9:0]'},
                                                                      'default': u"32'h0",
                                                                      'descr': u'physical channel address',
                                                                      'offset': u"14'h9",
                                                                      'typ': u'RO'},
                                                 u'Streamer_ControlStatus': {u'Streamer_Busy': {'descr': u'Busy. When asserted, indicates that a reconfiguration operation is in progress.',
                                                                                                'loc': u'[8:8]'},
                                                                             u'Streamer_Error': {'descr': u'Error. When asserted, indicates an error. This bit is asserted if any of the following conditions occur:   The channel address is invalid.   The PHY address is invalid.   The offset register address is invalid.',
                                                                                                 'loc': u'[9:9]'},
                                                                             u'Streamer_Mode': {'descr': u"Mode. The following encodings are defined:   2'b00: MIF. This mode continuously reads and transfers a .mif file, which contains the reconfiguration data.   2'b01: Direct Write. In this mode, you specify a logical channel, a register offset, and data. Depending on the logical channel specified, the Transceiver Reconfiguration Controller may mask some of the data specified to prevent read-only values that were optimized during startup, from being over-written. In particular, this mode protects the following settings:     Decision feedback equalization controls     RX buffer offset calibration adjustments     Duty cycle distortion adjustments     PMA clock settings   2'b10: Reserved   2'b11: Reserved",
                                                                                                'loc': u'[3:2]'},
                                                                             u'Streamer_Read': {'descr': u'Read. Writing a 1 to this bit triggers a read operation. This bit is self clearing.',
                                                                                                'loc': u'[1:1]',
                                                                                                'typ': u'SC'},
                                                                             u'Streamer_Write': {'descr': u'Write. Writing a 1 to this bit triggers a write operation. This bit is self clearing.',
                                                                                                 'loc': u'[0:0]',
                                                                                                 'typ': u'SC'},
                                                                             'default': u"32'h0",
                                                                             'descr': u'control and status',
                                                                             'offset': u"14'h3A",
                                                                             'typ': u'RO'},
                                                 u'Streamer_Data': {u'Streamer_Data': {'descr': u"When the MIF Mode = 2'b00, the data register stores read or write data for indirect access to the location specified in the offset register. When MIF Mode = 2'b01, data holds an update for transceiver to be dynamically reconfigured.",
                                                                                       'loc': u'[31:0]'},
                                                                    'default': u"32'h0",
                                                                    'descr': u'data',
                                                                    'offset': u"14'h3C",
                                                                    'typ': u'RW'},
                                                 u'Streamer_LogicalChanNo': {u'Streamer_LogicalChanNo': {'descr': u'The logical channel number. Must be specified when performing dynamic updates. The Transceiver Reconfiguration Controller maps the logical address to the physical address.',
                                                                                                         'loc': u'[9:0]'},
                                                                             'default': u"32'h0",
                                                                             'descr': u'logical channel number',
                                                                             'offset': u"14'h38",
                                                                             'typ': u'RW'},
                                                 u'Streamer_Offset': {u'Streamer_Offset': {'descr': u"When the MIF mode = 2'b00, the offset register specifies a an internal MIF Streamer register.  When MIF Mode = 2'b01, offset register specifies register in the transceiver",
                                                                                           'loc': u'[15:0]'},
                                                                      'default': u"32'h0",
                                                                      'descr': u'streamer offset',
                                                                      'offset': u"14'h3B",
                                                                      'typ': u'RW'},
                                                 u'Streamer_PhyChanAddr': {u'Streamer_PhyChanAddr': {'descr': u'The physical channel address. The Transceiver Reconfiguration Controller maps the logical address to the physical address.',
                                                                                                     'loc': u'[9:0]'},
                                                                           'default': u"32'h0",
                                                                           'descr': u'physical channel address',
                                                                           'offset': u"14'h39",
                                                                           'typ': u'RO'},
                                                 u'XCVR0_PhySerialLoopback': {u'XCVR0_PhySerialLoopback': {'descr': u'Writing a 1 to channel [n] puts channel [n] in serial loopback mode.',
                                                                                                           'loc': u'[31:0]'},
                                                                              'default': u"32'h0",
                                                                              'descr': u'phy_serial_loopback',
                                                                              'offset': u"14'h261",
                                                                              'typ': u'RW'},
                                                 u'XCVR0_PmaRxIsLockedtodata': {u'XCVR0_PmaRxIsLockedtodata': {'descr': u'When 1, indicates that the RX CDR PLL is locked to the RX data, and that the RX CDR has changed from LTR to LTD mode. Bit [n] corresponds to channel [n].',
                                                                                                               'loc': u'[31:0]'},
                                                                                'default': u"32'h0",
                                                                                'descr': u'pma_rx_is_lockedtodata',
                                                                                'offset': u"14'h266",
                                                                                'typ': u'RO'},
                                                 u'XCVR0_PmaRxIsLockedtoref': {u'XCVR0_PmaRxIsLockedtoref': {'descr': u'When 1, indicates that the RX CDR PLL is locked to the reference clock. Bit [n] corresponds to channel [n].',
                                                                                                             'loc': u'[31:0]'},
                                                                               'default': u"32'h0",
                                                                               'descr': u'pma_rx_is_lockedtoref',
                                                                               'offset': u"14'h267",
                                                                               'typ': u'RO'},
                                                 u'XCVR0_PmaRxSetLocktodata': {u'XCVR0_PmaRxSetLocktodata': {'descr': u'When set, programs the RX CDR PLL to lock to the incoming data. Bit [n] corresponds to channel [n].',
                                                                                                             'loc': u'[31:0]'},
                                                                               'default': u"32'h0",
                                                                               'descr': u'pma_rx_set_locktodata',
                                                                               'offset': u"14'h264",
                                                                               'typ': u'RW'},
                                                 u'XCVR0_PmaRxSetLocktoref': {u'XCVR0_PmaRxSetLocktoref': {'descr': u'When set, programs the RX CDR PLL to lock to the reference clock. Bit [n] corresponds to channel [n].',
                                                                                                           'loc': u'[31:0]'},
                                                                              'default': u"32'h0",
                                                                              'descr': u'pma_rx_set_locktoref',
                                                                              'offset': u"14'h265",
                                                                              'typ': u'RW'},
                                                 u'XCVR0_PmaRxSignaldetect': {u'XCVR0_PmaRxSignaldetect': {'descr': u'When channel [n] =1, indicates that receive circuit for channel [n] senses the specified voltage exists at the RX input buffer.',
                                                                                                           'loc': u'[31:0]'},
                                                                              'default': u"32'h0",
                                                                              'descr': u'pma_rx_signaldetect',
                                                                              'offset': u"14'h263",
                                                                              'typ': u'RO'},
                                                 u'XCVR0_ResetChBitmask': {u'XCVR0_ResetChBitmask': {'descr': u'Reset controller channel bitmask for digital resets. The default value is all 1s. Channel [n] can be reset when bit [n] = 1.',
                                                                                                     'loc': u'[31:0]'},
                                                                           'default': u"32'h0",
                                                                           'descr': u'reset_ch_bitmask',
                                                                           'offset': u"14'h241",
                                                                           'typ': u'RW'},
                                                 u'XCVR0_ResetControl': {u'XCVR0_ResetControl': {'descr': u'(write) Writing a 1 to bit 0 initiates a TX digital reset using the reset controller module. The reset affects channels enabled in the reset_ch_bitmask. Writing a 1 to bit 1 initiates a RX digital reset of channels enabled in the reset_ch_bitmask. (read) Reading bit 0 returns the status of the reset controller TX ready bit. Reading bit 1 returns the status of the reset controller RX ready bit.',
                                                                                                 'loc': u'[1:0]'},
                                                                         'default': u"32'h0",
                                                                         'descr': u'reset_control',
                                                                         'offset': u"14'h242",
                                                                         'typ': u'RW'},
                                                 u'XCVR1_PhySerialLoopback': {u'XCVR1_PhySerialLoopback': {'descr': u'Writing a 1 to channel [n] puts channel [n] in serial loopback mode.',
                                                                                                           'loc': u'[31:0]'},
                                                                              'default': u"32'h0",
                                                                              'descr': u'phy_serial_loopback',
                                                                              'offset': u"14'h461",
                                                                              'typ': u'RW'},
                                                 u'XCVR1_PmaRxIsLockedtodata': {u'XCVR1_PmaRxIsLockedtodata': {'descr': u'When 1, indicates that the RX CDR PLL is locked to the RX data, and that the RX CDR has changed from LTR to LTD mode. Bit [n] corresponds to channel [n].',
                                                                                                               'loc': u'[31:0]'},
                                                                                'default': u"32'h0",
                                                                                'descr': u'pma_rx_is_lockedtodata',
                                                                                'offset': u"14'h466",
                                                                                'typ': u'RO'},
                                                 u'XCVR1_PmaRxIsLockedtoref': {u'XCVR1_PmaRxIsLockedtoref': {'descr': u'When 1, indicates that the RX CDR PLL is locked to the reference clock. Bit [n] corresponds to channel [n].',
                                                                                                             'loc': u'[31:0]'},
                                                                               'default': u"32'h0",
                                                                               'descr': u'pma_rx_is_lockedtoref',
                                                                               'offset': u"14'h467",
                                                                               'typ': u'RO'},
                                                 u'XCVR1_PmaRxSetLocktodata': {u'XCVR1_PmaRxSetLocktodata': {'descr': u'When set, programs the RX CDR PLL to lock to the incoming data. Bit [n] corresponds to channel [n].',
                                                                                                             'loc': u'[31:0]'},
                                                                               'default': u"32'h0",
                                                                               'descr': u'pma_rx_set_locktodata',
                                                                               'offset': u"14'h464",
                                                                               'typ': u'RW'},
                                                 u'XCVR1_PmaRxSetLocktoref': {u'XCVR1_PmaRxSetLocktoref': {'descr': u'When set, programs the RX CDR PLL to lock to the reference clock. Bit [n] corresponds to channel [n].',
                                                                                                           'loc': u'[31:0]'},
                                                                              'default': u"32'h0",
                                                                              'descr': u'pma_rx_set_locktoref',
                                                                              'offset': u"14'h465",
                                                                              'typ': u'RW'},
                                                 u'XCVR1_PmaRxSignaldetect': {u'XCVR1_PmaRxSignaldetect': {'descr': u'When channel [n] =1, indicates that receive circuit for channel [n] senses the specified voltage exists at the RX input buffer.',
                                                                                                           'loc': u'[31:0]'},
                                                                              'default': u"32'h0",
                                                                              'descr': u'pma_rx_signaldetect',
                                                                              'offset': u"14'h463",
                                                                              'typ': u'RO'},
                                                 u'XCVR1_ResetChBitmask': {u'XCVR1_ResetChBitmask': {'descr': u'Reset controller channel bitmask for digital resets. The default value is all 1s. Channel [n] can be reset when bit [n] = 1.',
                                                                                                     'loc': u'[31:0]'},
                                                                           'default': u"32'h0",
                                                                           'descr': u'reset_ch_bitmask',
                                                                           'offset': u"14'h441",
                                                                           'typ': u'RW'},
                                                 u'XCVR1_ResetControl': {u'XCVR1_ResetControl': {'descr': u'(write) Writing a 1 to bit 0 initiates a TX digital reset using the reset controller module. The reset affects channels enabled in the reset_ch_bitmask. Writing a 1 to bit 1 initiates a RX digital reset of channels enabled in the reset_ch_bitmask. (read) Reading bit 0 returns the status of the reset controller TX ready bit. Reading bit 1 returns the status of the reset controller RX ready bit.',
                                                                                                 'loc': u'[1:0]'},
                                                                         'default': u"32'h0",
                                                                         'descr': u'reset_control',
                                                                         'offset': u"14'h442",
                                                                         'typ': u'RW'}},
 u'../../pma/doc/pma_1ch_regs.xml': {u'Ctl': {u'CDRLockMode': {'descr': u"CDR lock mode.  Controls the CDR PLL lock to reference / lock to data settings.  \n 00 = Automatic CDR lock mode.  CDR initially locks to reference clock, and then locks to data.  This should be the default setting\n X1 = Manual CDR  lock to data.  Lock time is dependent on transition density of incoming data and clock PPM difference.  When bit 0 is set, bit 1 is a don't care.\n 10 = Manual CDR lock to reference.  CDR tracks the receiver input reference clock.",
                                                               'loc': u'[4:3]'},
                                              u'EyeHClear': {'descr': u'Clear horizontal eye monitor (this feature is still TBD)',
                                                             'loc': u'[6:6]',
                                                             'typ': u'SC'},
                                              u'EyeVClear': {'descr': u'Clear vertical eye monitor (this feature is still TBD)',
                                                             'loc': u'[7:7]',
                                                             'typ': u'SC'},
                                              u'RxInvert': {'descr': u'Invert polarity of RX serial line',
                                                            'loc': u'[9:9]'},
                                              u'RxReset': {'descr': u'SW reset - applies reset to receive.   To reset the entire transceiver, assert both TxReset and RxReset on the same write event',
                                                           'loc': u'[1:1]',
                                                           'typ': u'SC'},
                                              u'SerialLpbkEn': {'descr': u'Enable near end serial loopback.  Connects transmit output to receive at FPGA.',
                                                                'loc': u'[2:2]'},
                                              u'TxInvert': {'descr': u'Invert polarity of TX serial line',
                                                            'loc': u'[8:8]'},
                                              u'TxMuxSel': {'descr': u'Transmit mux select between PRBS and crossbar.  0=crossbar, 1=PRBS.  Transmit is always enabled.',
                                                            'loc': u'[5:5]'},
                                              u'TxReset': {'descr': u'SW reset - applies reset to transmit.  To reset the entire transceiver, assert both TxReset and RxReset on the same write event',
                                                           'loc': u'[0:0]',
                                                           'typ': u'SC'},
                                              'default': u"1'h0",
                                              'descr': u'SERDES reset and control',
                                              'offset': u"10'h0",
                                              'typ': u'RW'},
                                     u'PrbsCtl': {u'ErrCntClr': {'descr': u'PRBS control register: clear PRBS error count register',
                                                                 'loc': u'[3:3]',
                                                                 'typ': u'SC'},
                                                  u'InjErr': {'descr': u'PRBS control register: inject a random bit error into the next transmitted PRBS primitive',
                                                              'loc': u'[2:2]',
                                                              'typ': u'SC'},
                                                  u'NotLockedCntClr': {'descr': u'PRBS control register: clear PRBS not locked count register',
                                                                       'loc': u'[5:5]',
                                                                       'typ': u'SC'},
                                                  u'PrbsSel': {'descr': u'PRBS control register: prbs mode select.  00 = off, 01 = prbs7, 10=prbs31. other encodings reserved.',
                                                               'loc': u'[1:0]'},
                                                  u'RxCntClr': {'descr': u'PRBS control register: clear PRBS receive count register',
                                                                'loc': u'[4:4]',
                                                                'typ': u'SC'},
                                                  'default': u"2'h0",
                                                  'descr': u'PRBS control',
                                                  'offset': u"10'h6",
                                                  'typ': u'RW'},
                                     u'PrbsErrCnt': {u'PrbsErrCnt': {'descr': u'Count of PRBS errors.  Along with PrbsRxCnt register, can be used to calculate bit error rates',
                                                                     'loc': u'[15:0]'},
                                                     'default': u"16'h0",
                                                     'descr': u'PRBS error count',
                                                     'offset': u"10'h7",
                                                     'typ': u'RO'},
                                     u'PrbsInjErrCnt': {u'PrbsInjErrCnt': {'descr': u'Count of PRBS inject error requests',
                                                                           'loc': u'[15:0]'},
                                                        'default': u"64'h0",
                                                        'descr': u'PRBS inj error count',
                                                        'offset': u"10'hC",
                                                        'typ': u'RO'},
                                     u'PrbsLock': {u'PrbsLock': {'descr': u'Current value of PRBS lock signal.',
                                                                 'loc': u'[0:0]'},
                                                   'default': u"1'h0",
                                                   'descr': u'PRBS locked',
                                                   'offset': u"10'hA",
                                                   'typ': u'RO'},
                                     u'PrbsNotLockedCnt': {u'PrbsNotLockedCnt': {'descr': u'Count of cycles when PRBS is enabled, and the prbs checker is not locked.',
                                                                                 'loc': u'[31:0]'},
                                                           'default': u"32'h0",
                                                           'descr': u'PRBS not locked count',
                                                           'offset': u"10'h9",
                                                           'typ': u'RO'},
                                     u'PrbsRxCnt': {u'PrbsRxCnt': {'descr': u'Count of received PRBS bits for use in calculating bit error rate.  This counter only starts incrementing after the prbs checker locks onto the incoming stream.',
                                                                   'loc': u'[47:0]'},
                                                    'default': u"48'h0",
                                                    'descr': u'PRBS rx bit count',
                                                    'offset': u"10'h8",
                                                    'typ': u'RO'},
                                     u'RxData': {u'RxData': {'descr': u'Last received 40b parallel data value',
                                                             'loc': u'[39:0]'},
                                                 'default': u"40'h0",
                                                 'descr': u'SERDES rx data',
                                                 'offset': u"10'h2",
                                                 'typ': u'RO'},
                                     u'Status': {u'LinkSpeed': {'descr': u'Current value of link speed setting from link engine. 000 = 1G, 001=2G, 010=4G, 011=8G.  Other encodings are reserved.  same rate.',
                                                                'loc': u'[14:12]'},
                                                 u'PLLLocked': {'descr': u'Current value of pll_locked (from ATX PLL)',
                                                                'loc': u'[9:9]'},
                                                 u'PLLPwrDn': {'descr': u'Current value of pll_powerdown (from reset controller)',
                                                               'loc': u'[0:0]'},
                                                 u'RxAnalogRst': {'descr': u'Current value of rx_analogreset',
                                                                  'loc': u'[4:4]'},
                                                 u'RxCalBusy': {'descr': u'Current value of rx_cal_busy, receive calibration is busy',
                                                                'loc': u'[8:8]'},
                                                 u'RxDigitalRst': {'descr': u'Current value of rx_digitalreset',
                                                                   'loc': u'[3:3]'},
                                                 u'RxLockedToData': {'descr': u'Current value of rx_is_lockedtodata',
                                                                     'loc': u'[6:6]'},
                                                 u'RxLockedToRef': {'descr': u'Current value of rx_is_lockedtoref',
                                                                    'loc': u'[5:5]'},
                                                 u'RxReady': {'descr': u'Current value of rx_ready (from reset controller)',
                                                              'loc': u'[10:10]'},
                                                 u'TxAnalogRst': {'descr': u'Current value of tx_analogreset',
                                                                  'loc': u'[2:2]'},
                                                 u'TxCalBusy': {'descr': u'Current value of tx_cal_busy, transmit calibration is busy',
                                                                'loc': u'[7:7]'},
                                                 u'TxDigitalRst': {'descr': u'Current value of tx_digitalreset',
                                                                   'loc': u'[1:1]'},
                                                 u'TxReady': {'descr': u'Current value of tx_ready (from reset controller)',
                                                              'loc': u'[11:11]'},
                                                 'default': u"1'h0",
                                                 'descr': u'SERDES status',
                                                 'offset': u"10'h1",
                                                 'typ': u'RO'},
                                     u'TxData': {u'RxData': {'descr': u'Last transmitted 40b parallel data value',
                                                             'loc': u'[39:0]'},
                                                 'default': u"40'h0",
                                                 'descr': u'SERDES tx data',
                                                 'offset': u"10'h3",
                                                 'typ': u'RO'},
                                     u'scratch': {'default': u"64'h0",
                                                  'descr': u'scratch',
                                                  'offset': u"10'hB",
                                                  u'scratch': {'descr': u'scratch register',
                                                               'loc': u'[63:0]'},
                                                  'typ': u'RW'}},
 u'../../txbist32b/doc/txbist32b_regs.xml': {u'scratch': {'default': u"64'h0",
                                                          'descr': u'Scratch',
                                                          'offset': u"10'h0",
                                                          u'scratch': {'descr': u'scratch register',
                                                                       'loc': u'[63:0]'},
                                                          'typ': u'RW'},
                                             u'txbist_crc_err_inj_cnt': {u'count': {'descr': u'Count of injected CRC errors',
                                                                                    'loc': u'[47:0]'},
                                                                         'default': u"48'h0",
                                                                         'descr': u'Statistics and debug',
                                                                         'offset': u"10'hC",
                                                                         'typ': u'FRC'},
                                             u'txbist_ctl': {u'10b_err_inj': {'descr': u'Writing this bit to 1 injects an invalid 10b code into the next transmitted word',
                                                                              'loc': u'[4:4]',
                                                                              'typ': u'SC'},
                                                             u'crc_auto_en': {'descr': u'txbist control - enable HW CRC generation.  Only used during RAM transmission mode.  HW detects end of frame and auto inserts CRC.  The HW generated CRC is inserted into the 4B primitive prior to the EOF, overwriting its value.',
                                                                              'loc': u'[5:5]'},
                                                             u'crc_err_inj': {'descr': u'Writing this bit to 1 injects a CRC error on the next frame.',
                                                                              'loc': u'[6:6]',
                                                                              'typ': u'SC'},
                                                             'default': u"3'h0",
                                                             'descr': u'Control',
                                                             u'interval_sync_en': {'descr': u'Setting this bit to 1 instructs the transmit unit to delay transmission until the next interval stats pulse.  On the interval stats pulse, tranmission starts and continues based on txbist control mode settings.',
                                                                                   'loc': u'[3:3]'},
                                                             u'mode': {'descr': u'txbist control - 3b mode field indicates transmission mode:  \n - 000 : disabled\n - 001 : from RAM.  Loop n times or continuous.  IPG inserted at end of RAM.\n - 010 : from prim register, continuous\n - 011 : reserved\n - 1xx : reserved',
                                                                       'loc': u'[2:0]'},
                                                             'offset': u"10'h7",
                                                             'typ': u'RW'},
                                             u'txbist_idle_primitive': {u'data': {'descr': u'4 byte IDLE primitive.   Used to specify the IDLE primitive transmitted during the IPG interval or after transmitting from the RAM.   Converted to 10b value before transmission.   Initialized to IDLE  ARBFF (K28.5,D20.4,D31.7,D31.7 = 0xBC,0x94,0xFF,0xFF).  The alternate IDLE is (K28.5,D21.4,D21.5,D21.5 = 0xBC,0x95,0xB5,0xB5).  Big endian format',
                                                                                  'loc': u'[35:0]'},
                                                                        'default': u"36'h8BC94FFFF",
                                                                        'descr': u'Control',
                                                                        'offset': u"10'h6",
                                                                        'typ': u'RW'},
                                             u'txbist_ipg_min': {'default': u"16'h4",
                                                                 'descr': u'Control',
                                                                 'offset': u"10'h1",
                                                                 u'size': {'descr': u'IPG minimum size (in 4B quantities).  Used along with ipg_size_offset to determine the IPG length.',
                                                                           'loc': u'[15:0]'},
                                                                 'typ': u'RW'},
                                             u'txbist_ipg_offset': {'default': u"4'h0",
                                                                    'descr': u'Control',
                                                                    'offset': {'descr': u'IPG max offset (in 4B quantities).  The offset  value is (2^ipg_offset)-1.  For example, an ipg_offset=3 would result in a max offset up to 7.  The offset value is randomized up to the max value, and added to ipg_min to determine the IPG length.   A value of 0 creates a fixed IPG length determined by ipg_min',
                                                                               'loc': u'[3:0]'},
                                                                    'typ': u'RW'},
                                             u'txbist_loop_cnt': {u'cnt': {'descr': u'Number of times to transmit contents of txbist RAM.  If set to zero, indicates continuous transmission.  At the end of transmission from the RAM, the bist engine will transmit IDLE primitives specified in txbist_idle_primitive',
                                                                           'loc': u'[31:0]'},
                                                                  'default': u"32'h0",
                                                                  'descr': u'Control',
                                                                  'offset': u"10'h4",
                                                                  'typ': u'RW'},
                                             u'txbist_ram_end': {'default': u"12'h0",
                                                                 'descr': u'Control',
                                                                 'offset': u"10'h3",
                                                                 u'ptr': {'descr': u'Pointer to last valid double word (4B) in txbist RAM.  HW will dispatch the contents of the RAM from address 0 to txbist_ram_end.',
                                                                          'loc': u'[11:0]'},
                                                                 'typ': u'RW'},
                                             u'txbist_rd_addr': {u'addr': {'descr': u'Read address index into txbist RAM.  Used to perform debug reads of the txbist RAM.  Writing to this register launches a read and returns data in txbist_rd_data',
                                                                           'loc': u'[11:0]'},
                                                                 'default': u"12'h0",
                                                                 'descr': u'Statistics and debug',
                                                                 'offset': u"10'hD",
                                                                 'typ': u'RW'},
                                             u'txbist_rd_data': {u'data': {'descr': u'Read data from txbist RAM indexed by txbist_rd_addr[11:0]',
                                                                           'loc': u'[35:0]'},
                                                                 'default': u"36'h0",
                                                                 'descr': u'Statistics and debug',
                                                                 'offset': u"10'hE",
                                                                 'typ': u'RO'},
                                             u'txbist_reg_primitive': {u'data': {'descr': u'4 Byte primitive value to transmit when txbist mode is set to transmit from register.  Upper 4b ([35:32]) specifies whether each byte is a K-code/D-code.  Converted to 10b value before transmission.  Big endian format.  Initialized with ARBff emissions lowering fill word primitive (K28.5-D20.4-D31.7-D31.7)',
                                                                                 'loc': u'[35:0]'},
                                                                       'default': u"36'h8BC94FFFF",
                                                                       'descr': u'Control',
                                                                       'offset': u"10'h5",
                                                                       'typ': u'RW'},
                                             u'txbist_tx_frame_cnt': {u'count': {'descr': u'Count of transmitted frames - count is incremented on detection of an EOF.   Saturates at max value',
                                                                                 'loc': u'[47:0]'},
                                                                      'default': u"48'h0",
                                                                      'descr': u'Statistics and debug',
                                                                      'offset': u"10'hB",
                                                                      'typ': u'FRC'},
                                             u'txbist_tx_prim_cnt': {u'count': {'descr': u'Count of  transmitted register primitives',
                                                                                'loc': u'[47:0]'},
                                                                     'default': u"48'h0",
                                                                     'descr': u'Statistics and debug',
                                                                     'offset': u"10'hA",
                                                                     'typ': u'FRC'},
                                             u'txbist_wr_addr': {u'data': {'descr': u'Writing this register updates the internal write address register used to index the txbist RAM on writes.  The internal write address register only needs to be updated once - prior to updating the wr_data register.  HW auto increments the internal write address register following every write.',
                                                                           'loc': u'[11:0]'},
                                                                 'default': u"12'h0",
                                                                 'descr': u'Control',
                                                                 'offset': u"10'h9",
                                                                 'typ': u'RW'},
                                             u'txbist_wr_data': {u'data': {'descr': u'Specifies the 4B primitive to be written into the txbist RAM.  Upper 4b indicates whether bytes is K-code (=1) or D-code (=0).  The txbist RAM is written when HW detects a write to this register.  Following, the write, the internal write address register is auto-incremented.',
                                                                           'loc': u'[35:0]'},
                                                                 'default': u"36'h0",
                                                                 'descr': u'Control',
                                                                 'offset': u"10'h8",
                                                                 'typ': u'RW'}},
 u'../../xbar/doc/xbar_regs.xml': {u'Cfg': {u'Link0Cfg': {'descr': u'Configuration: link xbar configuration.  Specifies source of data to be transmitted out on this link.  0000=txbist, 0001=link0, 0010=link1, etc, 1100=link11, 1101=crosslink',
                                                          'loc': u'[3:0]'},
                                            u'Link10Cfg': {'descr': u'Configuration: link xbar configuration.  Specifies source of data to be transmitted out on this link.  0000=txbist, 0001=link0, 0010=link1, etc, 1100=link11, 1101=crosslink',
                                                           'loc': u'[43:40]'},
                                            u'Link11Cfg': {'descr': u'Configuration: link xbar configuration.  Specifies source of data to be transmitted out on this link.  0000=txbist, 0001=link0, 0010=link1, etc, 1100=link11, 1101=crosslink',
                                                           'loc': u'[47:44]'},
                                            u'Link12Cfg': {'descr': u'Configuration: link xbar configuration.  Specifies source of data to be transmitted out on this link.  0000=txbist, 0001=link0, 0010=link1, etc, 1011=link11, 1100=crosslink',
                                                           'loc': u'[51:48]'},
                                            u'Link1Cfg': {'descr': u'Configuration: link xbar configuration.  Specifies source of data to be transmitted out on this link.  0000=txbist, 0001=link0, 0010=link1, etc, 1100=link11, 1101=crosslink',
                                                          'loc': u'[7:4]'},
                                            u'Link2Cfg': {'descr': u'Configuration: link xbar configuration.  Specifies source of data to be transmitted out on this link.  0000=txbist, 0001=link0, 0010=link1, etc, 1100=link11, 1101=crosslink',
                                                          'loc': u'[11:8]'},
                                            u'Link3Cfg': {'descr': u'Configuration: link xbar configuration.  Specifies source of data to be transmitted out on this link.  0000=txbist, 0001=link0, 0010=link1, etc, 1100=link11, 1101=crosslink',
                                                          'loc': u'[15:12]'},
                                            u'Link4Cfg': {'descr': u'Configuration: link xbar configuration.  Specifies source of data to be transmitted out on this link.  0000=txbist, 0001=link0, 0010=link1, etc, 1100=link11, 1101=crosslink',
                                                          'loc': u'[19:16]'},
                                            u'Link5Cfg': {'descr': u'Configuration: link xbar configuration.  Specifies source of data to be transmitted out on this link.  0000=txbist, 0001=link0, 0010=link1, etc, 1100=link11, 1101=crosslink',
                                                          'loc': u'[23:20]'},
                                            u'Link6Cfg': {'descr': u'Configuration: link xbar configuration.  Specifies source of data to be transmitted out on this link.  0000=txbist, 0001=link0, 0010=link1, etc, 1100=link11, 1101=crosslink',
                                                          'loc': u'[27:24]'},
                                            u'Link7Cfg': {'descr': u'Configuration: link xbar configuration.  Specifies source of data to be transmitted out on this link.  0000=txbist, 0001=link0, 0010=link1, etc, 1100=link11, 1101=crosslink',
                                                          'loc': u'[31:28]'},
                                            u'Link8Cfg': {'descr': u'Configuration: link xbar configuration.  Specifies source of data to be transmitted out on this link.  0000=txbist, 0001=link0, 0010=link1, etc, 1100=link11, 1101=crosslink',
                                                          'loc': u'[35:32]'},
                                            u'Link9Cfg': {'descr': u'Configuration: link xbar configuration.  Specifies source of data to be transmitted out on this link.  0000=txbist, 0001=link0, 0010=link1, etc, 1100=link11, 1101=crosslink',
                                                          'loc': u'[39:36]'},
                                            'default': u"64'h0",
                                            'descr': u'XBAR config',
                                            'offset': u"10'h4",
                                            'typ': u'RW'},
                                   u'Ctl': {u'FarLoopbackEn': {'descr': u'per channel, far-end loopback enable.  When enabled, RX recovered data is looped back and sent into transmit.  Because of PPM clock differences between the RX recovered clock and transmit clock, primitives may be added/deleted from the RX data stream.  When far-end loopback is enabled, txbist data streams cannot be transmitted.',
                                                               'loc': u'[29:4]'},
                                            u'IdleType': {'descr': u'IDLE primitive type: 0=IDLE, 1=ARBFF',
                                                          'loc': u'[1:1]'},
                                            u'SwRst': {'descr': u'SW reset - applies reset to all clock domains in entire xbar',
                                                       'loc': u'[0:0]',
                                                       'typ': u'SC'},
                                            'default': u"1'h0",
                                            'descr': u'XBAR reset and control',
                                            'offset': u"10'h1",
                                            'typ': u'RW'},
                                   u'Link0IdleDeleteCnt': {u'Link0IdleDeleteCnt': {'descr': u'Count of IDLEs deleted by read logic in the EFIFO for this link.  Can be used for debug or to determine PPM clock differences.',
                                                                                   'loc': u'[15:0]'},
                                                           'default': u"16'h0",
                                                           'descr': u'XBAR Link0 Idle Delete Cnt',
                                                           'offset': u"10'h12",
                                                           'typ': u'SATC'},
                                   u'Link0IdleInsertCnt': {u'Link0IdleInsertCnt': {'descr': u'Count of IDLEs inserted by read logic in the EFIFO for this link.  Can be used for debug or to determine PPM clock differences.',
                                                                                   'loc': u'[15:0]'},
                                                           'default': u"16'h0",
                                                           'descr': u'XBAR Link0 Idle Insert Cnt',
                                                           'offset': u"10'h5",
                                                           'typ': u'SATC'},
                                   u'Link10IdleDeleteCnt': {u'Link10IdleDeleteCnt': {'descr': u'Count of IDLEs deleted by read logic in the EFIFO for this link.  Can be used for debug or to determine PPM clock differences.',
                                                                                     'loc': u'[15:0]'},
                                                            'default': u"16'h0",
                                                            'descr': u'XBAR Link10 Idle Delete Cnt',
                                                            'offset': u"10'h1C",
                                                            'typ': u'SATC'},
                                   u'Link10IdleInsertCnt': {u'Link10IdleInsertCnt': {'descr': u'Count of IDLEs inserted by read logic in the EFIFO for this link.  Can be used for debug or to determine PPM clock differences.',
                                                                                     'loc': u'[15:0]'},
                                                            'default': u"16'h0",
                                                            'descr': u'XBAR Link10 Idle Insert Cnt',
                                                            'offset': u"10'hF",
                                                            'typ': u'SATC'},
                                   u'Link11IdleDeleteCnt': {u'Link11IdleDeleteCnt': {'descr': u'Count of IDLEs deleted by read logic in the EFIFO for this link.  Can be used for debug or to determine PPM clock differences.',
                                                                                     'loc': u'[15:0]'},
                                                            'default': u"16'h0",
                                                            'descr': u'XBAR Link11 Idle Delete Cnt',
                                                            'offset': u"10'h1D",
                                                            'typ': u'SATC'},
                                   u'Link11IdleInsertCnt': {u'Link11IdleInsertCnt': {'descr': u'Count of IDLEs inserted by read logic in the EFIFO for this link.  Can be used for debug or to determine PPM clock differences.',
                                                                                     'loc': u'[15:0]'},
                                                            'default': u"16'h0",
                                                            'descr': u'XBAR Link11 Idle Insert Cnt',
                                                            'offset': u"10'h10",
                                                            'typ': u'SATC'},
                                   u'Link12IdleDeleteCnt': {u'Link12IdleDeleteCnt': {'descr': u'Count of IDLEs deleted by read logic in the EFIFO for this link.  Can be used for debug or to determine PPM clock differences.',
                                                                                     'loc': u'[15:0]'},
                                                            'default': u"16'h0",
                                                            'descr': u'XBAR Link12 Idle Delete Cnt',
                                                            'offset': u"10'h1F",
                                                            'typ': u'SATC'},
                                   u'Link12IdleInsertCnt': {u'Link12IdleInsertCnt': {'descr': u'Count of IDLEs Deleted by read logic in the EFIFO for this link.  Can be used for debug or to determine PPM clock differences.',
                                                                                     'loc': u'[15:0]'},
                                                            'default': u"16'h0",
                                                            'descr': u'XBAR Link12 Idle Delete Cnt',
                                                            'offset': u"10'h11",
                                                            'typ': u'SATC'},
                                   u'Link1IdleDeleteCnt': {u'Link1IdleDeleteCnt': {'descr': u'Count of IDLEs deleted by read logic in the EFIFO for this link.  Can be used for debug or to determine PPM clock differences.',
                                                                                   'loc': u'[15:0]'},
                                                           'default': u"16'h0",
                                                           'descr': u'XBAR Link1 Idle Delete Cnt',
                                                           'offset': u"10'h13",
                                                           'typ': u'SATC'},
                                   u'Link1IdleInsertCnt': {u'Link1IdleInsertCnt': {'descr': u'Count of IDLEs inserted by read logic in the EFIFO for this link.  Can be used for debug or to determine PPM clock differences.',
                                                                                   'loc': u'[15:0]'},
                                                           'default': u"16'h0",
                                                           'descr': u'XBAR Link1 Idle Insert Cnt',
                                                           'offset': u"10'h6",
                                                           'typ': u'SATC'},
                                   u'Link2IdleDeleteCnt': {u'Link2IdleDeleteCnt': {'descr': u'Count of IDLEs deleted by read logic in the EFIFO for this link.  Can be used for debug or to determine PPM clock differences.',
                                                                                   'loc': u'[15:0]'},
                                                           'default': u"16'h0",
                                                           'descr': u'XBAR Link2 Idle Delete Cnt',
                                                           'offset': u"10'h14",
                                                           'typ': u'SATC'},
                                   u'Link2IdleInsertCnt': {u'Link2IdleInsertCnt': {'descr': u'Count of IDLEs inserted by read logic in the EFIFO for this link.  Can be used for debug or to determine PPM clock differences.',
                                                                                   'loc': u'[15:0]'},
                                                           'default': u"16'h0",
                                                           'descr': u'XBAR Link2 Idle Insert Cnt',
                                                           'offset': u"10'h7",
                                                           'typ': u'SATC'},
                                   u'Link3IdleDeleteCnt': {u'Link3IdleDeleteCnt': {'descr': u'Count of IDLEs deleted by read logic in the EFIFO for this link.  Can be used for debug or to determine PPM clock differences.',
                                                                                   'loc': u'[15:0]'},
                                                           'default': u"16'h0",
                                                           'descr': u'XBAR Link3 Idle Delete Cnt',
                                                           'offset': u"10'h15",
                                                           'typ': u'SATC'},
                                   u'Link3IdleInsertCnt': {u'Link3IdleInsertCnt': {'descr': u'Count of IDLEs inserted by read logic in the EFIFO for this link.  Can be used for debug or to determine PPM clock differences.',
                                                                                   'loc': u'[15:0]'},
                                                           'default': u"16'h0",
                                                           'descr': u'XBAR Link3 Idle Insert Cnt',
                                                           'offset': u"10'h8",
                                                           'typ': u'SATC'},
                                   u'Link4IdleDeleteCnt': {u'Link4IdleDeleteCnt': {'descr': u'Count of IDLEs deleted by read logic in the EFIFO for this link.  Can be used for debug or to determine PPM clock differences.',
                                                                                   'loc': u'[15:0]'},
                                                           'default': u"16'h0",
                                                           'descr': u'XBAR Link4 Idle Delete Cnt',
                                                           'offset': u"10'h16",
                                                           'typ': u'SATC'},
                                   u'Link4IdleInsertCnt': {u'Link4IdleInsertCnt': {'descr': u'Count of IDLEs inserted by read logic in the EFIFO for this link.  Can be used for debug or to determine PPM clock differences.',
                                                                                   'loc': u'[15:0]'},
                                                           'default': u"16'h0",
                                                           'descr': u'XBAR Link4 Idle Insert Cnt',
                                                           'offset': u"10'h9",
                                                           'typ': u'SATC'},
                                   u'Link5IdleDeleteCnt': {u'Link5IdleDeleteCnt': {'descr': u'Count of IDLEs deleted by read logic in the EFIFO for this link.  Can be used for debug or to determine PPM clock differences.',
                                                                                   'loc': u'[15:0]'},
                                                           'default': u"16'h0",
                                                           'descr': u'XBAR Link5 Idle Delete Cnt',
                                                           'offset': u"10'h17",
                                                           'typ': u'SATC'},
                                   u'Link5IdleInsertCnt': {u'Link5IdleInsertCnt': {'descr': u'Count of IDLEs inserted by read logic in the EFIFO for this link.  Can be used for debug or to determine PPM clock differences.',
                                                                                   'loc': u'[15:0]'},
                                                           'default': u"16'h0",
                                                           'descr': u'XBAR Link5 Idle Insert Cnt',
                                                           'offset': u"10'hA",
                                                           'typ': u'SATC'},
                                   u'Link6IdleDeleteCnt': {u'Link6IdleDeleteCnt': {'descr': u'Count of IDLEs deleted by read logic in the EFIFO for this link.  Can be used for debug or to determine PPM clock differences.',
                                                                                   'loc': u'[15:0]'},
                                                           'default': u"16'h0",
                                                           'descr': u'XBAR Link6 Idle Delete Cnt',
                                                           'offset': u"10'h18",
                                                           'typ': u'SATC'},
                                   u'Link6IdleInsertCnt': {u'Link6IdleInsertCnt': {'descr': u'Count of IDLEs inserted by read logic in the EFIFO for this link.  Can be used for debug or to determine PPM clock differences.',
                                                                                   'loc': u'[15:0]'},
                                                           'default': u"16'h0",
                                                           'descr': u'XBAR Link6 Idle Insert Cnt',
                                                           'offset': u"10'hB",
                                                           'typ': u'SATC'},
                                   u'Link7IdleDeleteCnt': {u'Link7IdleDeleteCnt': {'descr': u'Count of IDLEs deleted by read logic in the EFIFO for this link.  Can be used for debug or to determine PPM clock differences.',
                                                                                   'loc': u'[15:0]'},
                                                           'default': u"16'h0",
                                                           'descr': u'XBAR Link7 Idle Delete Cnt',
                                                           'offset': u"10'h19",
                                                           'typ': u'SATC'},
                                   u'Link7IdleInsertCnt': {u'Link7IdleInsertCnt': {'descr': u'Count of IDLEs inserted by read logic in the EFIFO for this link.  Can be used for debug or to determine PPM clock differences.',
                                                                                   'loc': u'[15:0]'},
                                                           'default': u"16'h0",
                                                           'descr': u'XBAR Link7 Idle Insert Cnt',
                                                           'offset': u"10'hC",
                                                           'typ': u'SATC'},
                                   u'Link8IdleDeleteCnt': {u'Link8IdleDeleteCnt': {'descr': u'Count of IDLEs deleted by read logic in the EFIFO for this link.  Can be used for debug or to determine PPM clock differences.',
                                                                                   'loc': u'[15:0]'},
                                                           'default': u"16'h0",
                                                           'descr': u'XBAR Link8 Idle Delete Cnt',
                                                           'offset': u"10'h1A",
                                                           'typ': u'SATC'},
                                   u'Link8IdleInsertCnt': {u'Link8IdleInsertCnt': {'descr': u'Count of IDLEs inserted by read logic in the EFIFO for this link.  Can be used for debug or to determine PPM clock differences.',
                                                                                   'loc': u'[15:0]'},
                                                           'default': u"16'h0",
                                                           'descr': u'XBAR Link8 Idle Insert Cnt',
                                                           'offset': u"10'hD",
                                                           'typ': u'SATC'},
                                   u'Link9IdleDeleteCnt': {u'Link9IdleDeleteCnt': {'descr': u'Count of IDLEs deleted by read logic in the EFIFO for this link.  Can be used for debug or to determine PPM clock differences.',
                                                                                   'loc': u'[15:0]'},
                                                           'default': u"16'h0",
                                                           'descr': u'XBAR Link9 Idle Delete Cnt',
                                                           'offset': u"10'h1B",
                                                           'typ': u'SATC'},
                                   u'Link9IdleInsertCnt': {u'Link9IdleInsertCnt': {'descr': u'Count of IDLEs inserted by read logic in the EFIFO for this link.  Can be used for debug or to determine PPM clock differences.',
                                                                                   'loc': u'[15:0]'},
                                                           'default': u"16'h0",
                                                           'descr': u'XBAR Link9 Idle Insert Cnt',
                                                           'offset': u"10'hE",
                                                           'typ': u'SATC'},
                                   u'RxEfifoCtl': {u'EfifoHighThresh': {'descr': u'RX Elastic FIFO high threshold.  The EFIFO contains 1024 entries.  If the EFIFO exceeds the high threshold, write logic auto drops one IDLE between frames.  The write logic never drops payload data - in case there are no IDLEs in between frames (error case), the EFIFO may overflow.  The write logic will always attempt to drop IDLEs when required, even if the number of IDLEs in between frames does not meet minimum fibre channel requirements.',
                                                                        'loc': u'[29:20]'},
                                                   u'EfifoLowThresh': {'descr': u'RX Elastic FIFO low threshold.  The EFIFO contains 1024 entries.  If the EFIFO drops below the low threshold mark, read logic auto inserts one IDLE in between frames.  This value must be set less than the read threshold mark for correct operation.',
                                                                       'loc': u'[19:10]'},
                                                   u'EfifoReadThresh': {'descr': u'RX Elastic FIFO read threshold.  The EFIFO contains 1024 entries.  The EFIFO starts reading after the number of entries passes the read threshold.  The EFIFO maintains a buffer of data before reading to allow sufficient time to identify frame boundaries for auto insertion of IDLEs.',
                                                                        'loc': u'[9:0]'},
                                                   'default': u"30'h30040200",
                                                   'descr': u'RX EFIFO control',
                                                   'offset': u"10'h2",
                                                   'typ': u'RW'},
                                   u'TxEfifoCtl': {u'EfifoHighThresh': {'descr': u'TX Elastic FIFO high threshold.  The EFIFO contains 1024 entries.  If the EFIFO exceeds the high threshold, write logic auto drops one IDLE between frames.  The write logic never drops payload data - in case there are no IDLEs in between frames (error case), the EFIFO may overflow.  The write logic will always attempt to drop IDLEs when required, even if the number of IDLEs in between frames does not meet minimum fibre channel requirements.',
                                                                        'loc': u'[29:20]'},
                                                   u'EfifoLowThresh': {'descr': u'TX Elastic FIFO low threshold.  The EFIFO contains 1024 entries.  If the EFIFO drops below the low threshold mark, read logic auto inserts one IDLE in between frames.  This value must be set less than the read threshold mark for correct operation.',
                                                                       'loc': u']19:10]'},
                                                   u'EfifoReadThresh': {'descr': u'TX Elastic FIFO read threshold.  The EFIFO contains 1024 entries.  The EFIFO starts reading after the number of entries passes the read threshold.  The EFIFO maintains a buffer of data before reading to allow sufficient time to identify frame boundaries for auto insertion of IDLEs.',
                                                                        'loc': u'[9:0]'},
                                                   'default': u"30'h30040200",
                                                   'descr': u'TX EFIFO control',
                                                   'offset': u"10'h3",
                                                   'typ': u'RW'},
                                   u'scratch': {'default': u"64'h0",
                                                'descr': u'XBAR scratch',
                                                'offset': u"10'h0",
                                                u'scratch': {'descr': u'scratch register',
                                                             'loc': u'[63:0]'},
                                                'typ': u'RW'}}}
decpaths = [
 u'pcie.dplbuf.link[0]',
 u'pcie.dplbuf.link[1]',
 u'pcie.dplbuf.link[2]',
 u'pcie.dplbuf.link[3]',
 u'pcie.dplbuf.link[4]',
 u'pcie.dplbuf.link[5]',
 u'pcie.dplbuf.link[6]',
 u'pcie.dplbuf.link[7]',
 u'pcie.dplbuf.link[8]',
 u'pcie.dplbuf.link[9]',
 u'pcie.dplbuf.link[10]',
 u'pcie.dplbuf.link[11]',
 u'pcie.xx02_g.perf',
 u'pcie.xx02_g.csr',
 u'bist.tx_ch0',
 u'bist.tx_ch1',
 u'bist.xx03_pcie.csr',
 u'global.xx01_g.ucstats',
 u'global.xx01_g.fpga',
 u'global.xx01_g.rcfg',
 u'global.xx01_g.clkrst',
 u'global.xx01_g.xbar',
 u'global.xx01_g.cross_ch[0]',
 u'global.xx01_g.cross_ch[1]',
 u'link[0].ch[0].serdes',
 u'link[0].ch[1].serdes',
 u'link[1].ch[0].serdes',
 u'link[1].ch[1].serdes',
 u'link[2].ch[0].serdes',
 u'link[2].ch[1].serdes',
 u'link[3].ch[0].serdes',
 u'link[3].ch[1].serdes',
 u'link[4].ch[0].serdes',
 u'link[4].ch[1].serdes',
 u'link[5].ch[0].serdes',
 u'link[5].ch[1].serdes',
 u'link[6].ch[0].serdes',
 u'link[6].ch[1].serdes',
 u'link[7].ch[0].serdes',
 u'link[7].ch[1].serdes',
 u'link[8].ch[0].serdes',
 u'link[8].ch[1].serdes',
 u'link[9].ch[0].serdes',
 u'link[9].ch[1].serdes',
 u'link[10].ch[0].serdes',
 u'link[10].ch[1].serdes',
 u'link[11].ch[0].serdes',
 u'link[11].ch[1].serdes',
 u'link[0].ch[0].ucstats',
 u'link[0].ch[1].ucstats',
 u'link[1].ch[0].ucstats',
 u'link[1].ch[1].ucstats',
 u'link[2].ch[0].ucstats',
 u'link[2].ch[1].ucstats',
 u'link[3].ch[0].ucstats',
 u'link[3].ch[1].ucstats',
 u'link[4].ch[0].ucstats',
 u'link[4].ch[1].ucstats',
 u'link[5].ch[0].ucstats',
 u'link[5].ch[1].ucstats',
 u'link[6].ch[0].ucstats',
 u'link[6].ch[1].ucstats',
 u'link[7].ch[0].ucstats',
 u'link[7].ch[1].ucstats',
 u'link[8].ch[0].ucstats',
 u'link[8].ch[1].ucstats',
 u'link[9].ch[0].ucstats',
 u'link[9].ch[1].ucstats',
 u'link[10].ch[0].ucstats',
 u'link[10].ch[1].ucstats',
 u'link[11].ch[0].ucstats',
 u'link[11].ch[1].ucstats',
 u'link[0].ch[0].extr',
 u'link[0].ch[1].extr',
 u'link[1].ch[0].extr',
 u'link[1].ch[1].extr',
 u'link[2].ch[0].extr',
 u'link[2].ch[1].extr',
 u'link[3].ch[0].extr',
 u'link[3].ch[1].extr',
 u'link[4].ch[0].extr',
 u'link[4].ch[1].extr',
 u'link[5].ch[0].extr',
 u'link[5].ch[1].extr',
 u'link[6].ch[0].extr',
 u'link[6].ch[1].extr',
 u'link[7].ch[0].extr',
 u'link[7].ch[1].extr',
 u'link[8].ch[0].extr',
 u'link[8].ch[1].extr',
 u'link[9].ch[0].extr',
 u'link[9].ch[1].extr',
 u'link[10].ch[0].extr',
 u'link[10].ch[1].extr',
 u'link[11].ch[0].extr',
 u'link[11].ch[1].extr',
 u'link[0].ch[0].mtip_fc2',
 u'link[0].ch[1].mtip_fc2',
 u'link[1].ch[0].mtip_fc2',
 u'link[1].ch[1].mtip_fc2',
 u'link[2].ch[0].mtip_fc2',
 u'link[2].ch[1].mtip_fc2',
 u'link[3].ch[0].mtip_fc2',
 u'link[3].ch[1].mtip_fc2',
 u'link[4].ch[0].mtip_fc2',
 u'link[4].ch[1].mtip_fc2',
 u'link[5].ch[0].mtip_fc2',
 u'link[5].ch[1].mtip_fc2',
 u'link[6].ch[0].mtip_fc2',
 u'link[6].ch[1].mtip_fc2',
 u'link[7].ch[0].mtip_fc2',
 u'link[7].ch[1].mtip_fc2',
 u'link[8].ch[0].mtip_fc2',
 u'link[8].ch[1].mtip_fc2',
 u'link[9].ch[0].mtip_fc2',
 u'link[9].ch[1].mtip_fc2',
 u'link[10].ch[0].mtip_fc2',
 u'link[10].ch[1].mtip_fc2',
 u'link[11].ch[0].mtip_fc2',
 u'link[11].ch[1].mtip_fc2',
 u'link[0].ch[0].mtip_fc1',
 u'link[0].ch[1].mtip_fc1',
 u'link[1].ch[0].mtip_fc1',
 u'link[1].ch[1].mtip_fc1',
 u'link[2].ch[0].mtip_fc1',
 u'link[2].ch[1].mtip_fc1',
 u'link[3].ch[0].mtip_fc1',
 u'link[3].ch[1].mtip_fc1',
 u'link[4].ch[0].mtip_fc1',
 u'link[4].ch[1].mtip_fc1',
 u'link[5].ch[0].mtip_fc1',
 u'link[5].ch[1].mtip_fc1',
 u'link[6].ch[0].mtip_fc1',
 u'link[6].ch[1].mtip_fc1',
 u'link[7].ch[0].mtip_fc1',
 u'link[7].ch[1].mtip_fc1',
 u'link[8].ch[0].mtip_fc1',
 u'link[8].ch[1].mtip_fc1',
 u'link[9].ch[0].mtip_fc1',
 u'link[9].ch[1].mtip_fc1',
 u'link[10].ch[0].mtip_fc1',
 u'link[10].ch[1].mtip_fc1',
 u'link[11].ch[0].mtip_fc1',
 u'link[11].ch[1].mtip_fc1',
 u'link[0].xx04_g.credit_stats[0]',
 u'link[0].xx04_g.credit_stats[1]',
 u'link[1].xx04_g.credit_stats[0]',
 u'link[1].xx04_g.credit_stats[1]',
 u'link[2].xx04_g.credit_stats[0]',
 u'link[2].xx04_g.credit_stats[1]',
 u'link[3].xx04_g.credit_stats[0]',
 u'link[3].xx04_g.credit_stats[1]',
 u'link[4].xx04_g.credit_stats[0]',
 u'link[4].xx04_g.credit_stats[1]',
 u'link[5].xx04_g.credit_stats[0]',
 u'link[5].xx04_g.credit_stats[1]',
 u'link[6].xx04_g.credit_stats[0]',
 u'link[6].xx04_g.credit_stats[1]',
 u'link[7].xx04_g.credit_stats[0]',
 u'link[7].xx04_g.credit_stats[1]',
 u'link[8].xx04_g.credit_stats[0]',
 u'link[8].xx04_g.credit_stats[1]',
 u'link[9].xx04_g.credit_stats[0]',
 u'link[9].xx04_g.credit_stats[1]',
 u'link[10].xx04_g.credit_stats[0]',
 u'link[10].xx04_g.credit_stats[1]',
 u'link[11].xx04_g.credit_stats[0]',
 u'link[11].xx04_g.credit_stats[1]',
 u'link[0].xx04_g.csr',
 u'link[1].xx04_g.csr',
 u'link[2].xx04_g.csr',
 u'link[3].xx04_g.csr',
 u'link[4].xx04_g.csr',
 u'link[5].xx04_g.csr',
 u'link[6].xx04_g.csr',
 u'link[7].xx04_g.csr',
 u'link[8].xx04_g.csr',
 u'link[9].xx04_g.csr',
 u'link[10].xx04_g.csr',
 u'link[11].xx04_g.csr']
decpath2src = {
 u'bist.tx_ch0': u'../../txbist32b/doc/txbist32b_regs.xml',
 u'bist.tx_ch1': u'../../txbist32b/doc/txbist32b_regs.xml',
 u'bist.xx03_pcie.csr': u'../../../../bali_dal/prototype/pcie/rtl/pcie_mwr_bist/pcie_mwr_bist_regs.xml',
 u'global.xx01_g.clkrst': u'../../fc8clkrst/doc/fc8clkrst_regs.xml',
 u'global.xx01_g.cross_ch[0]': u'../../pma/doc/pma_1ch_regs.xml',
 u'global.xx01_g.cross_ch[1]': u'../../pma/doc/pma_1ch_regs.xml',
 u'global.xx01_g.fpga': u'../../../../common/vi_design/chipregs/doc/chipregs.xml',
 u'global.xx01_g.rcfg': u'../../fc8pma/doc/dynamic_reconfig_regs.xml',
 u'global.xx01_g.ucstats': u'../../../../common/vi_design/ucstats/doc/ucstats_regs.xml',
 u'global.xx01_g.xbar': u'../../xbar/doc/xbar_regs.xml',
 u'link[0].ch[0].extr': u'../../../prototype/extractor/doc/extractor_regs.xml',
 u'link[0].ch[0].mtip_fc1': u'../../../prototype/mtip_if/doc/mtip_if_fc1_regs.xml',
 u'link[0].ch[0].mtip_fc2': u'../../../prototype/mtip_if/doc/mtip_if_fc2_regs.xml',
 u'link[0].ch[0].serdes': u'../../pma/doc/pma_1ch_regs.xml',
 u'link[0].ch[0].ucstats': u'../../../../common/vi_design/ucstats/doc/ucstats_sfp_regs.xml',
 u'link[0].ch[1].extr': u'../../../prototype/extractor/doc/extractor_regs.xml',
 u'link[0].ch[1].mtip_fc1': u'../../../prototype/mtip_if/doc/mtip_if_fc1_regs.xml',
 u'link[0].ch[1].mtip_fc2': u'../../../prototype/mtip_if/doc/mtip_if_fc2_regs.xml',
 u'link[0].ch[1].serdes': u'../../pma/doc/pma_1ch_regs.xml',
 u'link[0].ch[1].ucstats': u'../../../../common/vi_design/ucstats/doc/ucstats_sfp_regs.xml',
 u'link[0].xx04_g.credit_stats[0]': u'../../../prototype/link_engine/doc/credit_stats_regs.xml',
 u'link[0].xx04_g.credit_stats[1]': u'../../../prototype/link_engine/doc/credit_stats_regs.xml',
 u'link[0].xx04_g.csr': u'../../../prototype/link_engine/doc/link_engine_regs.xml',
 u'link[10].ch[0].extr': u'../../../prototype/extractor/doc/extractor_regs.xml',
 u'link[10].ch[0].mtip_fc1': u'../../../prototype/mtip_if/doc/mtip_if_fc1_regs.xml',
 u'link[10].ch[0].mtip_fc2': u'../../../prototype/mtip_if/doc/mtip_if_fc2_regs.xml',
 u'link[10].ch[0].serdes': u'../../pma/doc/pma_1ch_regs.xml',
 u'link[10].ch[0].ucstats': u'../../../../common/vi_design/ucstats/doc/ucstats_sfp_regs.xml',
 u'link[10].ch[1].extr': u'../../../prototype/extractor/doc/extractor_regs.xml',
 u'link[10].ch[1].mtip_fc1': u'../../../prototype/mtip_if/doc/mtip_if_fc1_regs.xml',
 u'link[10].ch[1].mtip_fc2': u'../../../prototype/mtip_if/doc/mtip_if_fc2_regs.xml',
 u'link[10].ch[1].serdes': u'../../pma/doc/pma_1ch_regs.xml',
 u'link[10].ch[1].ucstats': u'../../../../common/vi_design/ucstats/doc/ucstats_sfp_regs.xml',
 u'link[10].xx04_g.credit_stats[0]': u'../../../prototype/link_engine/doc/credit_stats_regs.xml',
 u'link[10].xx04_g.credit_stats[1]': u'../../../prototype/link_engine/doc/credit_stats_regs.xml',
 u'link[10].xx04_g.csr': u'../../../prototype/link_engine/doc/link_engine_regs.xml',
 u'link[11].ch[0].extr': u'../../../prototype/extractor/doc/extractor_regs.xml',
 u'link[11].ch[0].mtip_fc1': u'../../../prototype/mtip_if/doc/mtip_if_fc1_regs.xml',
 u'link[11].ch[0].mtip_fc2': u'../../../prototype/mtip_if/doc/mtip_if_fc2_regs.xml',
 u'link[11].ch[0].serdes': u'../../pma/doc/pma_1ch_regs.xml',
 u'link[11].ch[0].ucstats': u'../../../../common/vi_design/ucstats/doc/ucstats_sfp_regs.xml',
 u'link[11].ch[1].extr': u'../../../prototype/extractor/doc/extractor_regs.xml',
 u'link[11].ch[1].mtip_fc1': u'../../../prototype/mtip_if/doc/mtip_if_fc1_regs.xml',
 u'link[11].ch[1].mtip_fc2': u'../../../prototype/mtip_if/doc/mtip_if_fc2_regs.xml',
 u'link[11].ch[1].serdes': u'../../pma/doc/pma_1ch_regs.xml',
 u'link[11].ch[1].ucstats': u'../../../../common/vi_design/ucstats/doc/ucstats_sfp_regs.xml',
 u'link[11].xx04_g.credit_stats[0]': u'../../../prototype/link_engine/doc/credit_stats_regs.xml',
 u'link[11].xx04_g.credit_stats[1]': u'../../../prototype/link_engine/doc/credit_stats_regs.xml',
 u'link[11].xx04_g.csr': u'../../../prototype/link_engine/doc/link_engine_regs.xml',
 u'link[1].ch[0].extr': u'../../../prototype/extractor/doc/extractor_regs.xml',
 u'link[1].ch[0].mtip_fc1': u'../../../prototype/mtip_if/doc/mtip_if_fc1_regs.xml',
 u'link[1].ch[0].mtip_fc2': u'../../../prototype/mtip_if/doc/mtip_if_fc2_regs.xml',
 u'link[1].ch[0].serdes': u'../../pma/doc/pma_1ch_regs.xml',
 u'link[1].ch[0].ucstats': u'../../../../common/vi_design/ucstats/doc/ucstats_sfp_regs.xml',
 u'link[1].ch[1].extr': u'../../../prototype/extractor/doc/extractor_regs.xml',
 u'link[1].ch[1].mtip_fc1': u'../../../prototype/mtip_if/doc/mtip_if_fc1_regs.xml',
 u'link[1].ch[1].mtip_fc2': u'../../../prototype/mtip_if/doc/mtip_if_fc2_regs.xml',
 u'link[1].ch[1].serdes': u'../../pma/doc/pma_1ch_regs.xml',
 u'link[1].ch[1].ucstats': u'../../../../common/vi_design/ucstats/doc/ucstats_sfp_regs.xml',
 u'link[1].xx04_g.credit_stats[0]': u'../../../prototype/link_engine/doc/credit_stats_regs.xml',
 u'link[1].xx04_g.credit_stats[1]': u'../../../prototype/link_engine/doc/credit_stats_regs.xml',
 u'link[1].xx04_g.csr': u'../../../prototype/link_engine/doc/link_engine_regs.xml',
 u'link[2].ch[0].extr': u'../../../prototype/extractor/doc/extractor_regs.xml',
 u'link[2].ch[0].mtip_fc1': u'../../../prototype/mtip_if/doc/mtip_if_fc1_regs.xml',
 u'link[2].ch[0].mtip_fc2': u'../../../prototype/mtip_if/doc/mtip_if_fc2_regs.xml',
 u'link[2].ch[0].serdes': u'../../pma/doc/pma_1ch_regs.xml',
 u'link[2].ch[0].ucstats': u'../../../../common/vi_design/ucstats/doc/ucstats_sfp_regs.xml',
 u'link[2].ch[1].extr': u'../../../prototype/extractor/doc/extractor_regs.xml',
 u'link[2].ch[1].mtip_fc1': u'../../../prototype/mtip_if/doc/mtip_if_fc1_regs.xml',
 u'link[2].ch[1].mtip_fc2': u'../../../prototype/mtip_if/doc/mtip_if_fc2_regs.xml',
 u'link[2].ch[1].serdes': u'../../pma/doc/pma_1ch_regs.xml',
 u'link[2].ch[1].ucstats': u'../../../../common/vi_design/ucstats/doc/ucstats_sfp_regs.xml',
 u'link[2].xx04_g.credit_stats[0]': u'../../../prototype/link_engine/doc/credit_stats_regs.xml',
 u'link[2].xx04_g.credit_stats[1]': u'../../../prototype/link_engine/doc/credit_stats_regs.xml',
 u'link[2].xx04_g.csr': u'../../../prototype/link_engine/doc/link_engine_regs.xml',
 u'link[3].ch[0].extr': u'../../../prototype/extractor/doc/extractor_regs.xml',
 u'link[3].ch[0].mtip_fc1': u'../../../prototype/mtip_if/doc/mtip_if_fc1_regs.xml',
 u'link[3].ch[0].mtip_fc2': u'../../../prototype/mtip_if/doc/mtip_if_fc2_regs.xml',
 u'link[3].ch[0].serdes': u'../../pma/doc/pma_1ch_regs.xml',
 u'link[3].ch[0].ucstats': u'../../../../common/vi_design/ucstats/doc/ucstats_sfp_regs.xml',
 u'link[3].ch[1].extr': u'../../../prototype/extractor/doc/extractor_regs.xml',
 u'link[3].ch[1].mtip_fc1': u'../../../prototype/mtip_if/doc/mtip_if_fc1_regs.xml',
 u'link[3].ch[1].mtip_fc2': u'../../../prototype/mtip_if/doc/mtip_if_fc2_regs.xml',
 u'link[3].ch[1].serdes': u'../../pma/doc/pma_1ch_regs.xml',
 u'link[3].ch[1].ucstats': u'../../../../common/vi_design/ucstats/doc/ucstats_sfp_regs.xml',
 u'link[3].xx04_g.credit_stats[0]': u'../../../prototype/link_engine/doc/credit_stats_regs.xml',
 u'link[3].xx04_g.credit_stats[1]': u'../../../prototype/link_engine/doc/credit_stats_regs.xml',
 u'link[3].xx04_g.csr': u'../../../prototype/link_engine/doc/link_engine_regs.xml',
 u'link[4].ch[0].extr': u'../../../prototype/extractor/doc/extractor_regs.xml',
 u'link[4].ch[0].mtip_fc1': u'../../../prototype/mtip_if/doc/mtip_if_fc1_regs.xml',
 u'link[4].ch[0].mtip_fc2': u'../../../prototype/mtip_if/doc/mtip_if_fc2_regs.xml',
 u'link[4].ch[0].serdes': u'../../pma/doc/pma_1ch_regs.xml',
 u'link[4].ch[0].ucstats': u'../../../../common/vi_design/ucstats/doc/ucstats_sfp_regs.xml',
 u'link[4].ch[1].extr': u'../../../prototype/extractor/doc/extractor_regs.xml',
 u'link[4].ch[1].mtip_fc1': u'../../../prototype/mtip_if/doc/mtip_if_fc1_regs.xml',
 u'link[4].ch[1].mtip_fc2': u'../../../prototype/mtip_if/doc/mtip_if_fc2_regs.xml',
 u'link[4].ch[1].serdes': u'../../pma/doc/pma_1ch_regs.xml',
 u'link[4].ch[1].ucstats': u'../../../../common/vi_design/ucstats/doc/ucstats_sfp_regs.xml',
 u'link[4].xx04_g.credit_stats[0]': u'../../../prototype/link_engine/doc/credit_stats_regs.xml',
 u'link[4].xx04_g.credit_stats[1]': u'../../../prototype/link_engine/doc/credit_stats_regs.xml',
 u'link[4].xx04_g.csr': u'../../../prototype/link_engine/doc/link_engine_regs.xml',
 u'link[5].ch[0].extr': u'../../../prototype/extractor/doc/extractor_regs.xml',
 u'link[5].ch[0].mtip_fc1': u'../../../prototype/mtip_if/doc/mtip_if_fc1_regs.xml',
 u'link[5].ch[0].mtip_fc2': u'../../../prototype/mtip_if/doc/mtip_if_fc2_regs.xml',
 u'link[5].ch[0].serdes': u'../../pma/doc/pma_1ch_regs.xml',
 u'link[5].ch[0].ucstats': u'../../../../common/vi_design/ucstats/doc/ucstats_sfp_regs.xml',
 u'link[5].ch[1].extr': u'../../../prototype/extractor/doc/extractor_regs.xml',
 u'link[5].ch[1].mtip_fc1': u'../../../prototype/mtip_if/doc/mtip_if_fc1_regs.xml',
 u'link[5].ch[1].mtip_fc2': u'../../../prototype/mtip_if/doc/mtip_if_fc2_regs.xml',
 u'link[5].ch[1].serdes': u'../../pma/doc/pma_1ch_regs.xml',
 u'link[5].ch[1].ucstats': u'../../../../common/vi_design/ucstats/doc/ucstats_sfp_regs.xml',
 u'link[5].xx04_g.credit_stats[0]': u'../../../prototype/link_engine/doc/credit_stats_regs.xml',
 u'link[5].xx04_g.credit_stats[1]': u'../../../prototype/link_engine/doc/credit_stats_regs.xml',
 u'link[5].xx04_g.csr': u'../../../prototype/link_engine/doc/link_engine_regs.xml',
 u'link[6].ch[0].extr': u'../../../prototype/extractor/doc/extractor_regs.xml',
 u'link[6].ch[0].mtip_fc1': u'../../../prototype/mtip_if/doc/mtip_if_fc1_regs.xml',
 u'link[6].ch[0].mtip_fc2': u'../../../prototype/mtip_if/doc/mtip_if_fc2_regs.xml',
 u'link[6].ch[0].serdes': u'../../pma/doc/pma_1ch_regs.xml',
 u'link[6].ch[0].ucstats': u'../../../../common/vi_design/ucstats/doc/ucstats_sfp_regs.xml',
 u'link[6].ch[1].extr': u'../../../prototype/extractor/doc/extractor_regs.xml',
 u'link[6].ch[1].mtip_fc1': u'../../../prototype/mtip_if/doc/mtip_if_fc1_regs.xml',
 u'link[6].ch[1].mtip_fc2': u'../../../prototype/mtip_if/doc/mtip_if_fc2_regs.xml',
 u'link[6].ch[1].serdes': u'../../pma/doc/pma_1ch_regs.xml',
 u'link[6].ch[1].ucstats': u'../../../../common/vi_design/ucstats/doc/ucstats_sfp_regs.xml',
 u'link[6].xx04_g.credit_stats[0]': u'../../../prototype/link_engine/doc/credit_stats_regs.xml',
 u'link[6].xx04_g.credit_stats[1]': u'../../../prototype/link_engine/doc/credit_stats_regs.xml',
 u'link[6].xx04_g.csr': u'../../../prototype/link_engine/doc/link_engine_regs.xml',
 u'link[7].ch[0].extr': u'../../../prototype/extractor/doc/extractor_regs.xml',
 u'link[7].ch[0].mtip_fc1': u'../../../prototype/mtip_if/doc/mtip_if_fc1_regs.xml',
 u'link[7].ch[0].mtip_fc2': u'../../../prototype/mtip_if/doc/mtip_if_fc2_regs.xml',
 u'link[7].ch[0].serdes': u'../../pma/doc/pma_1ch_regs.xml',
 u'link[7].ch[0].ucstats': u'../../../../common/vi_design/ucstats/doc/ucstats_sfp_regs.xml',
 u'link[7].ch[1].extr': u'../../../prototype/extractor/doc/extractor_regs.xml',
 u'link[7].ch[1].mtip_fc1': u'../../../prototype/mtip_if/doc/mtip_if_fc1_regs.xml',
 u'link[7].ch[1].mtip_fc2': u'../../../prototype/mtip_if/doc/mtip_if_fc2_regs.xml',
 u'link[7].ch[1].serdes': u'../../pma/doc/pma_1ch_regs.xml',
 u'link[7].ch[1].ucstats': u'../../../../common/vi_design/ucstats/doc/ucstats_sfp_regs.xml',
 u'link[7].xx04_g.credit_stats[0]': u'../../../prototype/link_engine/doc/credit_stats_regs.xml',
 u'link[7].xx04_g.credit_stats[1]': u'../../../prototype/link_engine/doc/credit_stats_regs.xml',
 u'link[7].xx04_g.csr': u'../../../prototype/link_engine/doc/link_engine_regs.xml',
 u'link[8].ch[0].extr': u'../../../prototype/extractor/doc/extractor_regs.xml',
 u'link[8].ch[0].mtip_fc1': u'../../../prototype/mtip_if/doc/mtip_if_fc1_regs.xml',
 u'link[8].ch[0].mtip_fc2': u'../../../prototype/mtip_if/doc/mtip_if_fc2_regs.xml',
 u'link[8].ch[0].serdes': u'../../pma/doc/pma_1ch_regs.xml',
 u'link[8].ch[0].ucstats': u'../../../../common/vi_design/ucstats/doc/ucstats_sfp_regs.xml',
 u'link[8].ch[1].extr': u'../../../prototype/extractor/doc/extractor_regs.xml',
 u'link[8].ch[1].mtip_fc1': u'../../../prototype/mtip_if/doc/mtip_if_fc1_regs.xml',
 u'link[8].ch[1].mtip_fc2': u'../../../prototype/mtip_if/doc/mtip_if_fc2_regs.xml',
 u'link[8].ch[1].serdes': u'../../pma/doc/pma_1ch_regs.xml',
 u'link[8].ch[1].ucstats': u'../../../../common/vi_design/ucstats/doc/ucstats_sfp_regs.xml',
 u'link[8].xx04_g.credit_stats[0]': u'../../../prototype/link_engine/doc/credit_stats_regs.xml',
 u'link[8].xx04_g.credit_stats[1]': u'../../../prototype/link_engine/doc/credit_stats_regs.xml',
 u'link[8].xx04_g.csr': u'../../../prototype/link_engine/doc/link_engine_regs.xml',
 u'link[9].ch[0].extr': u'../../../prototype/extractor/doc/extractor_regs.xml',
 u'link[9].ch[0].mtip_fc1': u'../../../prototype/mtip_if/doc/mtip_if_fc1_regs.xml',
 u'link[9].ch[0].mtip_fc2': u'../../../prototype/mtip_if/doc/mtip_if_fc2_regs.xml',
 u'link[9].ch[0].serdes': u'../../pma/doc/pma_1ch_regs.xml',
 u'link[9].ch[0].ucstats': u'../../../../common/vi_design/ucstats/doc/ucstats_sfp_regs.xml',
 u'link[9].ch[1].extr': u'../../../prototype/extractor/doc/extractor_regs.xml',
 u'link[9].ch[1].mtip_fc1': u'../../../prototype/mtip_if/doc/mtip_if_fc1_regs.xml',
 u'link[9].ch[1].mtip_fc2': u'../../../prototype/mtip_if/doc/mtip_if_fc2_regs.xml',
 u'link[9].ch[1].serdes': u'../../pma/doc/pma_1ch_regs.xml',
 u'link[9].ch[1].ucstats': u'../../../../common/vi_design/ucstats/doc/ucstats_sfp_regs.xml',
 u'link[9].xx04_g.credit_stats[0]': u'../../../prototype/link_engine/doc/credit_stats_regs.xml',
 u'link[9].xx04_g.credit_stats[1]': u'../../../prototype/link_engine/doc/credit_stats_regs.xml',
 u'link[9].xx04_g.csr': u'../../../prototype/link_engine/doc/link_engine_regs.xml',
 u'pcie.dplbuf.link[0]': u'../../../../bali_dal/prototype/pcie/rtl/bali_pcie_app/regs/bali_dplbuf_regs.xml',
 u'pcie.dplbuf.link[10]': u'../../../../bali_dal/prototype/pcie/rtl/bali_pcie_app/regs/bali_dplbuf_regs.xml',
 u'pcie.dplbuf.link[11]': u'../../../../bali_dal/prototype/pcie/rtl/bali_pcie_app/regs/bali_dplbuf_regs.xml',
 u'pcie.dplbuf.link[1]': u'../../../../bali_dal/prototype/pcie/rtl/bali_pcie_app/regs/bali_dplbuf_regs.xml',
 u'pcie.dplbuf.link[2]': u'../../../../bali_dal/prototype/pcie/rtl/bali_pcie_app/regs/bali_dplbuf_regs.xml',
 u'pcie.dplbuf.link[3]': u'../../../../bali_dal/prototype/pcie/rtl/bali_pcie_app/regs/bali_dplbuf_regs.xml',
 u'pcie.dplbuf.link[4]': u'../../../../bali_dal/prototype/pcie/rtl/bali_pcie_app/regs/bali_dplbuf_regs.xml',
 u'pcie.dplbuf.link[5]': u'../../../../bali_dal/prototype/pcie/rtl/bali_pcie_app/regs/bali_dplbuf_regs.xml',
 u'pcie.dplbuf.link[6]': u'../../../../bali_dal/prototype/pcie/rtl/bali_pcie_app/regs/bali_dplbuf_regs.xml',
 u'pcie.dplbuf.link[7]': u'../../../../bali_dal/prototype/pcie/rtl/bali_pcie_app/regs/bali_dplbuf_regs.xml',
 u'pcie.dplbuf.link[8]': u'../../../../bali_dal/prototype/pcie/rtl/bali_pcie_app/regs/bali_dplbuf_regs.xml',
 u'pcie.dplbuf.link[9]': u'../../../../bali_dal/prototype/pcie/rtl/bali_pcie_app/regs/bali_dplbuf_regs.xml',
 u'pcie.xx02_g.csr': u'../../../../bali_dal/prototype/pcie/rtl/bali_pcie_app/regs/bali_pcie_regs.xml',
 u'pcie.xx02_g.perf': u'../../../../bali_dal/prototype/pcie/rtl/bali_pcie_app/regs/pcie_perf_regs.xml'}
    
  
def read_default_registers (fpgaid):
  """
  """
  for dec in decpaths:
    src=decpath2src[dec]
    #print src
    try :
      regtree=src2param[src]
    except KeyError:
      if debug: print "Error 17: src",src
      exit(3)
    for regname in src2param[src]:
      try:
        default=default2value(src2param[src][regname]['default'])
        #print "rdwr -b %d %s.%s" % (fpgaid,dec,regname)
        cmd= "rdwr -b %d %s.%s" % (fpgaid,dec,regname)
        cmd=re.sub('xx.._','',cmd)
        print cmd
        proc = subprocess.Popen( cmd, shell=True, stdout = subprocess.PIPE, stderr = subprocess.PIPE )
        out,error=proc.communicate()
        print out
        print error
        print default
        if proc.returncode !=0:
          print "ERROR: read/write error %s %s" % (out,error)
          #exit(4)
        try:
          index=out.index(':')
          value=out[index+1:].strip()
          index=value.index(' ')
          value=value[:index]
          if int(value,16) != default:
            print "Default Mismatch: %s %s %x" % (cmd,out,default)
          else:
            print "Default Match: %s %s %x" % (cmd,out,default)
        except ValueError:
          pass
      except KeyError:
        if debug: print "Error 19: no default value",regname,src2param[src][regname]

def default2value(number):
  """
  """
  if "'h" in number:
    print number
    index=number.index("'h")
    number=int(number[index+2:],16)
  elif "'d" in number:
    index=number.index("'d")
    number=int(number[index+2:],10)
  else:
    if debug: print "Error 20: default format %s"%number
    number=0
  return number

if __name__ == '__main__':
  """
  """
  argc=len(sys.argv)


  for fpgaid in range(1,5):
    read_default_registers(fpgaid)


  
