// This file is auto generated by auto_wire_reg.pl - revision 0.5
// Input file: /home/lzhou/proj/sandbox2/trunk/projects/dominica/xbar/rtl/xbar_efifo.sv
// Do not modify this file because it will be overwritten when it is auto generated again.
wire [9:0]                          cr_efifo_low_thresh_sync;      // from xbar_efifo.sv:79:    assign cr_efifo_low_thresh_sync[9:0]    = cr_efifo_low_thresh[9:0];
wire [9:0]                          cr_efifo_high_thresh_sync;     // from xbar_efifo.sv:80:    assign cr_efifo_high_thresh_sync[9:0]   = cr_efifo_high_thresh[9:0];
wire [9:0]                          cr_efifo_read_thresh_sync;     // from xbar_efifo.sv:81:    assign cr_efifo_read_thresh_sync[9:0]   = cr_efifo_read_thresh[9:0];
wire                                efifo_wr_en;                   // from xbar_efifo.sv:137:    assign efifo_wr_en         = ~drop_fifo_empty & ~drop_idle;
wire                                idle_in_drop_fifo;             // from xbar_efifo.sv:200:    assign idle_in_drop_fifo = (drop_fifo_rd_data[41:40]==IDLE);
wire                                sof_in_drop_fifo;              // from xbar_efifo.sv:201:    assign sof_in_drop_fifo  = (drop_fifo_rd_data[41:40]==SOF);
wire [1:0]                          rx_type;                       // from xbar_efifo.sv:203:    assign rx_type[1:0] = (idle | lr | lrr | nos | ols) ? IDLE :
reg                                 drop_fifo_wr_one_shot;         // from xbar_efifo.sv:210:      drop_fifo_wr_one_shot <= ~rx_rst_n ? 1'b0 :
reg  [2:0]                          sm_state;                      // from xbar_efifo.sv:227:         sm_state[2:0] <= SM_WR_IDLE;
wire                                sm_in_drop;                    // from xbar_efifo.sv:252:    assign sm_in_drop   = (sm_state[2:0]==SM_WR_DROP);
wire                                drop_idle;                     // from xbar_efifo.sv:253:    assign drop_idle    = (sm_in_drop & idle_in_drop_fifo);
reg  [2:0]                          sm_rd_state;                   // from xbar_efifo.sv:274:         sm_rd_state[2:0] <= SM_RD_IDLE;
reg  [9:0]                          efifo_rd_usedw;                // from xbar_efifo.sv:284:              sm_rd_state[2:0] <= (efifo_rd_usedw[9:0]<=cr_efifo_low_thresh_sync[9:0]) ? SM_RD_INSERT : SM_RD_READING;
wire                                sm_rd_in_insert;               // from xbar_efifo.sv:303:    assign sm_rd_in_insert   = (sm_rd_state[2:0]==SM_RD_INSERT);
wire                                insert_idle;                   // from xbar_efifo.sv:305:    assign insert_idle       = (sm_rd_in_insert & idle_in_efifo);
wire                                idle_in_efifo;                 // from xbar_efifo.sv:306:    assign idle_in_efifo     = (efifo_rd_data[41:40]==IDLE);
wire                                sof_in_efifo;                  // from xbar_efifo.sv:307:    assign sof_in_efifo      = (efifo_rd_data[41:40]==SOF);
wire                                efifo_rd_en;                   // from xbar_efifo.sv:309:    assign efifo_rd_en       = (sm_rd_state[2:0]!=SM_RD_IDLE) & ~efifo_rd_empty & ~insert_idle;
reg  [39:0]                         tx_data_last_idle;             // from xbar_efifo.sv:314:       tx_data_last_idle[39:0] <= idle_in_efifo ? efifo_rd_data[39:0] : tx_data_last_idle[39:0];
wire                                sof;                           // from xbar_efifo.sv:88:       .sof        (sof),
wire                                eof;                           // from xbar_efifo.sv:89:       .eof        (eof),
wire                                idle;                          // from xbar_efifo.sv:90:       .idle       (idle),
wire                                nos;                           // from xbar_efifo.sv:91:       .nos        (nos),
wire                                ols;                           // from xbar_efifo.sv:92:       .ols        (ols),
wire                                lr;                            // from xbar_efifo.sv:93:       .lr         (lr),
wire                                lrr;                           // from xbar_efifo.sv:94:       .lrr        (lrr)
wire [41:0]                         efifo_rd_data;                 // from xbar_efifo.sv:120:       .q                      (efifo_rd_data[41:0]),
wire                                efifo_rd_empty;                // from xbar_efifo.sv:121:       .rdempty                (efifo_rd_empty),
wire                                efifo_rd_full;                 // from xbar_efifo.sv:122:       .rdfull                 (efifo_rd_full),
wire                                efifo_wr_empty;                // from xbar_efifo.sv:124:       .wrempty                (efifo_wr_empty),
wire                                efifo_wr_full;                 // from xbar_efifo.sv:125:       .wrfull                 (efifo_wr_full),
wire [9:0]                          efifo_wr_usedw;                // from xbar_efifo.sv:126:       .wrusedw                (efifo_wr_usedw[9:0]),
wire [41:0]                         drop_fifo_rd_data;             // from xbar_efifo.sv:192:       .q                                (drop_fifo_rd_data[41:0]),
wire                                drop_fifo_empty;               // from xbar_efifo.sv:190:       .empty                            (drop_fifo_empty),
wire                                drop_fifo_full;                // from xbar_efifo.sv:191:       .full                             (drop_fifo_full),
